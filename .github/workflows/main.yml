name: SCANOSS WorkFlow Demo

on:
  push:
    branches:
      - '*'

jobs:
  scan-and-generate-sbom:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to GitHub Docker Registry
        if: env.DOCKER_AUTH_REQUIRED == 'true'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Run SCANOSS Analysis for License - Encryption - Vulnerabilities
        run: |
          docker pull ghcr.io/scanoss/scanoss-py:v1.19.0
          docker run --rm -v $(pwd):/scanoss ghcr.io/scanoss/scanoss-py:v1.19.0 scan ./ --key txnUfW0xwF0KI1U1RW5sDSBL --format cyclonedx -o cycloneDX.json
          docker run --rm -v $(pwd):/scanoss ghcr.io/scanoss/scanoss-py:v1.19.0 comp crypto --key txnUfW0xwF0KI1U1RW5sDSBL --purl pkg:github/heimdal/heimdal > crypto_results.txt

      - name: Upload SBOM Results
        uses: actions/upload-artifact@v4
        with:
          name: scanoss-results
          path: |
            ./cycloneDX.json
            ./crypto_results.txt

  process-vulnerabilities:
    runs-on: ubuntu-latest
    needs: scan-and-generate-sbom

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download SBOM Results
        uses: actions/download-artifact@v4
        with:
          name: scanoss-results
          path: ./

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests tabulate matplotlib kaleido numpy

      - name: Process EPSS, KEV, and NVD Data
        run: |
          python scripts/epss.py

      - name: Check Generated Vulnerability Report
        run: |
          if [ ! -f vulnerability_report.json ]; then
            echo "Error: vulnerability_report.json not found!"
            exit 1
          fi

      - name: Upload Enriched Vulnerability Data
        uses: actions/upload-artifact@v4
        with:
          name: enriched-vulnerability-data
          path: vulnerability_report.json

  generate-charts:
    runs-on: ubuntu-latest
    needs: process-vulnerabilities

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Enriched Vulnerability Data
        uses: actions/download-artifact@v4
        with:
          name: enriched-vulnerability-data
          path: ./

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests tabulate matplotlib kaleido numpy

      - name: Ensure Charts Directory Exists
        run: mkdir -p charts

      - name: Generate Charts
        run: |
          python scripts/generatecharts.py

      - name: Check Generated Charts
        run: |
          if [ -z "$(ls -A charts)" ]; then
            echo "Error: No charts were generated!"
            exit 1
          fi

      - name: Upload Charts
        uses: actions/upload-artifact@v4
        with:
          name: vulnerability-charts
          path: charts/

      - name: Append Chart Insights to GitHub Summary  # ✅ Fix: Ensure summary.md is appended
        run: |
          if [ -f summary.md ]; then
            cat summary.md >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Error: summary.md not found!" >> $GITHUB_STEP_SUMMARY
