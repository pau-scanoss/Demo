package:
  name: tensorrt-10.3
  version: 10.3.0.26
  epoch: 1
  description: TensorRT library for NVIDIA GPUs
  copyright:
    - license: PROPRIETARY
  options:
    no-depends: true
  target-architecture:
    - x86_64
  dependencies:
    runtime:
      - libnvinfer-dispatch-${{vars.major-minor}}=${{package.full-version}}
      - libnvinfer-lean-${{vars.major-minor}}=${{package.full-version}}
      - libnvinfer-plugin-${{vars.major-minor}}=${{package.full-version}}
      - libnvinfer-vc-plugin-${{vars.major-minor}}=${{package.full-version}}
      - libnvonnxparser-${{vars.major-minor}}=${{package.full-version}}
      - libnvinfer-${{vars.major-minor}}=${{package.full-version}}
      - libnvinfer-bin-${{vars.major-minor}}=${{package.full-version}}

var-transforms:
  - from: ${{package.version}}
    match: '(\d+\.\d+\.\d+)\.\d+'
    replace: '$1'
    to: mangled-package-version
  - from: ${{package.version}}
    match: '(\d+\.\d+)\.\d+\.\d+'
    replace: '$1'
    to: major-minor

environment:
  contents:
    packages:
      - busybox

data:
  - name: _libs
    items:
      libnvinfer-dispatch:
      libnvinfer-lean:
      libnvinfer-plugin:
      libnvinfer-vc-plugin:
      libnvonnxparser:
      libnvinfer:

pipeline:
  - uses: fetch
    with:
      uri: "https://developer.nvidia.com/downloads/compute/machine-learning/tensorrt/${{vars.mangled-package-version}}/tars/TensorRT-${{package.version}}.Linux.x86_64-gnu.cuda-12.5.tar.gz"
      expected-sha256: "adff1cd5abe5d87013806172351e58fd024e5bf0fc61d49ef4b84cd38ed99081"
      timeout: 600

  # Setup version symlinks
  - runs: |
      mkdir -p ${{targets.contextdir}}/usr/local/tensorrt-${{package.version}}
      mv targets doc lib ${{targets.contextdir}}/usr/local/tensorrt-${{package.version}}/
      ln -s /usr/local/tensorrt-${{package.version}} ${{targets.contextdir}}/usr/local/tensorrt

subpackages:
  - name: ${{package.name}}-dev
    description: tensorrt dev metapackage
    options:
      no-depends: true
    dependencies:
      runtime:
        - libnvinfer-dispatch-${{vars.major-minor}}-dev=${{package.full-version}}
        - libnvinfer-lean-${{vars.major-minor}}-dev=${{package.full-version}}
        - libnvinfer-plugin-${{vars.major-minor}}-dev=${{package.full-version}}
        - libnvinfer-vc-plugin-${{vars.major-minor}}-dev=${{package.full-version}}
        - libnvonnxparser-${{vars.major-minor}}-dev=${{package.full-version}}
        - libnvinfer-${{vars.major-minor}}-dev=${{package.full-version}}

  - name: libnvinfer-bin-${{vars.major-minor}}
    description: libnvinfer binaries
    options:
      no-depends: true
    pipeline:
      - runs: |
          _bindir=usr/local/tensorrt-${{package.version}}/targets/x86_64-linux-gnu/bin
          mkdir -p ${{targets.contextdir}}/$_bindir
          mv ${{targets.destdir}}/$_bindir/* ${{targets.contextdir}}/$_bindir
          mv bin ${{targets.contextdir}}/usr/local/tensorrt-${{package.version}}

  - name: libnvinfer-${{vars.major-minor}}-samples
    description: libnvinfer samples
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/local/tensorrt-${{package.version}}/
          mv samples ${{targets.contextdir}}/usr/local/tensorrt-${{package.version}}/

  - range: _libs
    name: ${{range.key}}-${{vars.major-minor}}
    description: ${{range.key}}
    options:
      no-depends: true
    pipeline:
      - runs: |
          libname="${{range.key}}"
          _libdir=usr/local/tensorrt-${{package.version}}/targets/x86_64-linux-gnu/lib
          mkdir -p ${{targets.subpkgdir}}/$_libdir

          # Replacing hyphens with underscores in libname
          libname_with_underscore="${libname//-/_}"
          mv ${{targets.destdir}}/$_libdir/${libname_with_underscore}.so.* ${{targets.subpkgdir}}/$_libdir

          if [ "$libname" = "libnvinfer" ]; then
            mv ${{targets.destdir}}/$_libdir/${libname_with_underscore}_builder*.so.* ${{targets.subpkgdir}}/$_libdir
          fi

  - range: _libs
    name: ${{range.key}}-${{vars.major-minor}}-dev
    description: ${{range.key}}-dev
    options:
      no-depends: true
    pipeline:
      - runs: |
          _libdir=usr/local/tensorrt-${{package.version}}/targets/x86_64-linux-gnu/lib
          _includedir=usr/local/tensorrt-${{package.version}}/include

          mkdir -p ${{targets.subpkgdir}}/$_libdir ${{targets.subpkgdir}}/$_libdir/stubs

          libname="${{range.key}}"

          # Replacing hyphens with underscores in libname
          libname_with_underscore="${libname//-/_}"
          mv ${{targets.destdir}}/$_libdir/${libname_with_underscore}.so ${{targets.subpkgdir}}/$_libdir
          mv ${{targets.destdir}}/$_libdir/stubs/${libname_with_underscore}.so ${{targets.subpkgdir}}/$_libdir/stubs/
          mv ${{targets.destdir}}/$_libdir/${libname_with_underscore}_static.a ${{targets.subpkgdir}}/$_libdir

          if [ "$libname" = "libnvonnxparser" ]; then
            mkdir -p ${{targets.subpkgdir}}/$_includedir
            mv ${{targets.destdir}}/$_libdir/libonnx_proto.a ${{targets.subpkgdir}}/$_libdir
            mv include/NvOnnx*.h ${{targets.subpkgdir}}/$_includedir
          fi

          if [ "$libname" = "libnvinfer-plugin" ]; then
            mkdir -p ${{targets.subpkgdir}}/$_includedir
            mv include/NvInferPlugin*.h ${{targets.subpkgdir}}/$_includedir
          fi

          if [ "$libname" = "libnvinfer" ]; then
            mkdir -p ${{targets.subpkgdir}}/$_includedir
            _includes="NvInfer.h NvInferConsistency.h NvInferConsistencyImpl.h NvInferImpl.h NvInferLegacyDims.h NvInferRuntime.h NvInferRuntimeBase.h NvInferRuntimeCommon.h NvInferRuntimePlugin.h NvInferSafeRuntime.h NvInferVersion.h"
            for i in $_includes; do
              mv include/$i ${{targets.subpkgdir}}/$_includedir
            done
          fi

update:
  # No release-monitoring support for the multi-arch "enterprise" driver, only
  # for x86-only consumer release train.
  enabled: false
