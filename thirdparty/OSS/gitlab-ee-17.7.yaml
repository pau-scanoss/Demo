package:
  name: gitlab-ee-17.7
  version: "17.7.2"
  epoch: 1
  description: GitLab is an open source end-to-end software development platform with built-in version control, issue tracking, code review, CI/CD, and more.
  copyright:
    - license: MIT
  dependencies:
    provides:
      - gitlab-ee=${{package.full-version}}

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+\.\d+)\.\d+$
    replace: "$1"
    to: major-minor-version

pipeline:
  - uses: git-checkout
    with:
      repository: https://gitlab.com/gitlab-org/gitlab.git
      tag: v${{package.version}}-ee
      expected-commit: e2760d8d33495ca8eb675dce3fbadb28c3d31958

  - uses: go/bump
    with:
      modroot: ./workhorse
      deps: |-
        golang.org/x/crypto@v0.31.0
        golang.org/x/net@v0.33.0

subpackages:
  - name: gitlab-workhorse-ee-${{vars.major-minor-version}}
    dependencies:
      provides:
        - gitlab-workhorse-ee=${{package.full-version}}
      runtime:
        - gitlab-rails-ee-assets-${{vars.major-minor-version}}
        - gitlab-rails-ee-doc-${{vars.major-minor-version}}
        - exiftool
    pipeline:
      - uses: go/build
        with:
          modroot: ./workhorse
          packages: ./cmd/gitlab-workhorse
          output: gitlab-workhorse
      - uses: go/build
        with:
          modroot: ./workhorse
          packages: ./cmd/gitlab-resize-image
          output: gitlab-resize-image
      - uses: go/build
        with:
          modroot: ./workhorse
          packages: ./cmd/gitlab-zip-cat
          output: gitlab-zip-cat
      - uses: go/build
        with:
          modroot: ./workhorse
          packages: ./cmd/gitlab-zip-metadata
          output: gitlab-zip-metadata

test:
  environment:
    contents:
      packages:
        - bash
        - curl
        - redis
        - gitlab-workhorse-ee-${{vars.major-minor-version}}
  pipeline:
    - runs: |
        bash -c '
        set -e
        export TMPDIR=/tmp/gitlab
        mkdir -p -m 3770 $TMPDIR

        export GITLAB_WORKHORSE_LOG_FILE=${GITLAB_WORKHORSE_LOG_FILE:-stdout}
        export GITLAB_WORKHORSE_LOG_FORMAT=${GITLAB_WORKHORSE_LOG_FORMAT:-json}

        GITLAB_WORKHORSE_CONFIG_FILE=/tmp/workhorse-config.toml

        # Create a configuration file for gitlab-workhorse with the dynamic port
        tee $GITLAB_WORKHORSE_CONFIG_FILE <<EOL
        [redis]
        URL = "redis://localhost:6379"

        [metadata]
          zip_reader_limit_bytes = 104857600

        [image_resizer]
          max_scaler_procs = 4
          max_filesize = 250000

        [[listeners]]
          network = "tcp"
          addr = "127.0.0.1:3443"
        EOL

        redis-server --daemonize yes

        gitlab-workhorse \
          -logFile ${GITLAB_WORKHORSE_LOG_FILE} \
          -logFormat ${GITLAB_WORKHORSE_LOG_FORMAT} \
          -authBackend ${GITLAB_WORKHORSE_AUTH_BACKEND:-http://localhost:8080} \
          -config "${GITLAB_WORKHORSE_CONFIG_FILE}" \
          2>&1 &
          WORKHORSE_PID=$!

        sleep 10

        # Check if the server is running using BusyBox ps
        if ! ps | grep $WORKHORSE_PID > /dev/null; then
            echo "Workhorse server failed to start"
            exit 1
        fi

        # Need to test the health endpoint once rails is packaged.
        '

update:
  enabled: true
  git:
    strip-prefix: v
    strip-suffix: -ee
    tag-filter-prefix: v17.7
