package:
  name: minio-fips
  version: "0.20250120.144907"
  epoch: 0
  description: Multi-Cloud Object Storage
  copyright:
    - license: AGPL-3.0-or-later

var-transforms:
  - from: ${{package.version}}
    match: ^0\.(\d{4})(\d{2})(\d{2})\.(\d{2})(\d{2})(\d{2})$
    replace: RELEASE.${1}-${2}-${3}T${4}-${5}-${6}Z
    to: mangled-package-version

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/minio/minio
      tag: ${{vars.mangled-package-version}}
      expected-commit: 827004cd6d3da8f49a5320c94ae74ae128156ed6

  - uses: go/build
    with:
      # use go-fips-md5 becasue minio is using md5 to performsome checks
      go-package: go-fips-md5
      packages: .
      ldflags: $(go run buildscripts/gen-ldflags.go | sed 's|-s -w ||')
      output: minio

test:
  environment:
    contents:
      packages:
        - mc-fips
        - curl
        - posix-libc-utils
  pipeline:
    - uses: test/go-fips-check
    - runs: |
        #!/bin/bash

        # Variables
        MINIO_ALIAS="myminio"
        BUCKET_NAME="test-bucket"
        TEST_FILE="testfile.txt"
        MINIO_BINARY="minio"
        MINIO_DATA_DIR="/data/minio"
        MINIO_SERVER_URL="http://localhost:9000"
        MINIO_ACCESS_KEY="minioadmin"
        MINIO_SECRET_KEY="minioadmin"

        # Function to start MinIO server
        start_minio() {
            echo "Starting MinIO server..."
            MINIO_ROOT_USER=$MINIO_ACCESS_KEY MINIO_ROOT_PASSWORD=$MINIO_SECRET_KEY $MINIO_BINARY server $MINIO_DATA_DIR &
            MINIO_PID=$!

            sleep 10
        }

        # Function to stop MinIO server
        stop_minio() {
            echo "Stopping MinIO server..."
            kill $MINIO_PID
            wait $MINIO_PID
        }

        # Function to check if MinIO is running
        check_minio() {
            echo "Checking if MinIO server is running..."
            if mc alias list | grep -q "$MINIO_ALIAS"; then
                echo "MinIO server is accessible."
                return 0
            else
                echo "MinIO server is not accessible."
                return 1
            fi
        }

        # Configure mc with default credentials
        configure_mc() {
            echo "Configuring mc with default credentials..."
            mc alias set "$MINIO_ALIAS" $MINIO_SERVER_URL "$MINIO_ACCESS_KEY" "$MINIO_SECRET_KEY"
        }

        # Main script
        if start_minio; then
            configure_mc

            if check_minio; then
                # Create a test file
                echo "Creating a test file..."
                echo "This is a test file." > $TEST_FILE

                # Create a bucket
                echo "Creating a bucket named $BUCKET_NAME..."
                mc mb "$MINIO_ALIAS/$BUCKET_NAME"

                # Upload the test file to the bucket
                echo "Uploading the test file to the bucket..."
                mc cp $TEST_FILE "$MINIO_ALIAS/$BUCKET_NAME"

                # List the contents of the bucket
                echo "Listing the contents of the bucket..."
                mc ls "$MINIO_ALIAS/$BUCKET_NAME"

                # Clean up
                echo "Cleaning up..."
                rm $TEST_FILE
                mc rb --force "$MINIO_ALIAS/$BUCKET_NAME"

                echo "MinIO test completed."
            else
                echo "MinIO server failed to respond. Exiting."
                exit 1
            fi

            stop_minio
        else
            echo "MinIO server failed to start. Exiting."
            exit 1
        fi
        minio --version
        minio --help

update:
  enabled: true
  version-transform:
    - match: ^RELEASE\.(\d{4})-(\d{2})-(\d{2})T(\d{2})-(\d{2})-(\d{2})Z$
      replace: 0.${1}${2}${3}.${4}${5}${6}
  github:
    identifier: minio/minio
    use-tag: true
