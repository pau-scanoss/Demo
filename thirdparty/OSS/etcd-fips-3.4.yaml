package:
  name: etcd-fips-3.4
  version: 3.4.35
  epoch: 2
  description: A highly-available key value store for shared configuration and service discovery.
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - ca-certificates-bundle
      - glibc

environment:
  contents:
    packages:
      - bash
      - busybox
      - ca-certificates-bundle
      - git
      - go-fips
  environment:
    CGO_ENABLED: "1"

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/etcd-io/etcd
      tag: v${{package.version}}
      expected-commit: f893034254cfa2235dba249ac1155e7fefefcfd7

  - uses: go/bump
    with:
      deps: golang.org/x/crypto@v0.31.0 golang.org/x/net@v0.33.0

  - runs: |
      bash -x ./build
      mkdir -p "${{targets.destdir}}"/var/lib/${{package.name}}
      chmod 700 "${{targets.destdir}}"/var/lib/${{package.name}}
      install -Dm755 bin/etcd "${{targets.destdir}}"/usr/bin/etcd
      install -Dm755 bin/etcdctl "${{targets.destdir}}"/usr/bin/etcdctl
      # removed etcdutl since it does not exist in 3.4.x

  - uses: strip

update:
  enabled: true
  github:
    identifier: etcd-io/etcd
    strip-prefix: v
    tag-filter-prefix: v3.4
    use-tag: true

test:
  environment:
    contents:
      packages:
        - openssl-config-fipshardened
    environment:
      # etcd v3.4.x has "Experimental" support for arm64
      # See: https://etcd.io/docs/v3.4/op-guide/supported-platform/#current-support
      ETCD_UNSUPPORTED_ARCH: "arm64"
  pipeline:
    - uses: test/go-fips-check
    - runs: |
        etcd --help
        etcdctl version
        etcdctl --help
    - name: Verify etcd version
      runs: |
        etcd --version | grep "etcd Version: 3.4"
    - name: Start etcd server and perform health check
      runs: |
        # Start etcd in the background
        etcd &
        ETCD_PID=$!
        sleep 5 # Wait for etcd to start
        # Perform a health check
        etcdctl endpoint health
        kill $ETCD_PID
    - name: Set and get a key-value pair
      runs: |
        etcd &
        ETCD_PID=$!
        sleep 5 # Wait for etcd to start
        # Set a key-value pair
        etcdctl put mykey "Hello, etcd"
        # Get the value
        etcdctl get mykey | grep -q "Hello, etcd"
        kill $ETCD_PID
