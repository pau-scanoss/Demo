package:
  name: mongod-7.0
  version: 7.0.16
  epoch: 0
  description: "The MongoDB Database"
  copyright:
    - license: "SSPL-1.0"
  resources:
    cpu: 40
    memory: 90Gi
  dependencies:
    provides:
      - mongod=${{package.full-version}}

environment:
  contents:
    packages:
      - binutils-gold
      - build-base
      - busybox
      - ca-certificates-bundle
      - curl-dev
      - ld-linux
      - openssl-dev
      - openssl
      - py3.11-pip
      - python-3.11
      - python-3.11-dev
      - wolfi-base
      - xz-dev
      - zlib-dev
      - bash
      - gosu
      - mongo-tools
      - mongosh
      - render-template
      - wait-for-port
      - yq

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/mongodb/mongo
      tag: r${{package.version}}
      expected-commit: 83c3f10433284e1296498e90d8e1439af951deec

  - uses: patch
    with:
      patches: disablewerror.patch optional.patch

  - runs: |
      python3 -m pip install scons
      python3 -m pip install -r etc/pip/compile-requirements.txt
      # fix build object cache hash calcuation in a fips-enabled environment
      sed 's/hashlib.md5()/hashlib.sha256()/g' -i site_scons/mongo/generators.py
      # fix a RuntimeError: deque mutated during iteration error in librdkafka - the defines
      # referenced in the SConscript aren't set anywhere, so just comment out the function calls
      sed 's/^remove_define/#remove_define/g' -i src/third_party/librdkafka/SConscript
      scons \
        VERBOSE=1 \
        --config=force \
        CXXFLAGS="--param destructive-interference-size=64" \
        --ssl \
        --separate-debug=on \
        --disable-warnings-as-errors \
        --linker=gold \
        install-devcore
      mkdir -p ${{targets.destdir}}/usr/bin
      mv build/install/bin/mongod ${{targets.destdir}}/usr/bin

  - uses: strip

subpackages:
  - name: "mongos-7.0"
    description: "mongo sharding"
    dependencies:
      provides:
        - mongos=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          mv build/install/bin/mongos ${{targets.subpkgdir}}/usr/bin
    test:
      pipeline:
        - runs: |
            mongos --version
            mongos --help

  - name: "mongo-7.0"
    description: "mongo shell"
    dependencies:
      provides:
        - mongo=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          mv build/install/bin/mongo ${{targets.subpkgdir}}/usr/bin
    test:
      pipeline:
        - runs: |
            mongo --version
            mongo --help

  - name: "mongod-7.0-bitnami-compat"
    description: "mongod bitnami compat"
    dependencies:
      runtime:
        # Required by startup scripts
        - busybox
        - bash
        - coreutils
        - posix-libc-utils
        - gosu
        - mongo-7.0
        - mongo-tools
        - mongod-7.0
        - mongosh
        - render-template
        - wait-for-port
        - yq
    pipeline:
      - uses: bitnami/compat
        with:
          image: mongodb
          version-path: 7.0/debian-12
          commit: d685a6cc58fda7403ad9106c58c0fa851f53c85d
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/opt/bitnami
          mkdir -p "${{targets.subpkgdir}}"/opt/bitnami/licenses
          mkdir -p "${{targets.subpkgdir}}"/opt/bitnami/scripts
          mkdir -p "${{targets.subpkgdir}}"/opt/bitnami/etc
          mkdir -p "${{targets.subpkgdir}}"/opt/bitnami/common/bin
          mkdir -p "${{targets.subpkgdir}}"/opt/bitnami/mongodb/bin
          mkdir -p "${{targets.subpkgdir}}"/opt/bitnami/mongodb/logs
          mkdir -p "${{targets.subpkgdir}}"/opt/bitnami/mongodb/tmp
          mkdir -p "${{targets.subpkgdir}}"/bitnami/mongodb/conf
          mkdir -p "${{targets.subpkgdir}}"/bitnami/mongodb/data/db

          ln -sf /usr/bin/gosu "${{targets.subpkgdir}}"/opt/bitnami/common/bin/gosu
          ln -sf /usr/bin/render-template "${{targets.subpkgdir}}"/opt/bitnami/common/bin/render-template
          ln -sf /usr/bin/wait-for-port "${{targets.subpkgdir}}"/opt/bitnami/common/bin/wait-for-port
          ln -sf /usr/bin/yq "${{targets.subpkgdir}}"/opt/bitnami/common/bin/yq

          # sed all the scripts to use absolute path in the build environment
          find . -iname "*.sh" -exec sed 's#/opt/bitnami#${{targets.subpkgdir}}/opt/bitnami#g' -i {} \;

          # this script does some magic with env vars, templates, etc. etc.
          # it is easier to run it than figure out everything that it touches

          ${{targets.subpkgdir}}/opt/bitnami/scripts/mongodb/postunpack.sh

          # un-sed everything back to absolute /opt/bitnami prefix
          find ${{targets.subpkgdir}}/opt/bitnami -type f -exec sed 's#${{targets.subpkgdir}}##g' -i {} \;
      - runs: |
          # Set the target directory for the symbolic links
          target_dir="${{targets.subpkgdir}}/opt/bitnami/mongodb/bin/"

          # Loop through the binaries in /usr/bin/
          for binary_path in /usr/bin/mongo*; do
              # Check if the path is a file and not a directory
              if [ -f "$binary_path" ]; then
                  # Extract the binary name from the path
                  binary_name=$(basename "$binary_path")

                  # Create the symbolic link
                  ln -sf "$binary_path" "$target_dir$binary_name"

                  echo "Created symbolic link for $binary_name"
              fi
          done
          ln -sf /usr/bin/mongo "${{targets.subpkgdir}}"/opt/bitnami/mongodb/bin/mongo
          ln -sf /usr/bin/mongod "${{targets.subpkgdir}}"/opt/bitnami/mongodb/bin/mongod
      - runs: |
          # touch/mkdir these empty files and directories to quiet various startup messages per upstream
          touch "${{targets.subpkgdir}}"/.dbshell
          touch "${{targets.subpkgdir}}"/.mongorc.js
          touch "${{targets.subpkgdir}}"/.mongoshrc.js
          mkdir "${{targets.subpkgdir}}"/.mongodb
          mkdir "${{targets.subpkgdir}}"/docker-entrypoint-initdb.d
    test:
      pipeline:
        - runs: |
            run-script --version
            run-script --help

update:
  enabled: true
  github:
    identifier: mongodb/mongo
    strip-prefix: r
    use-tag: true
    tag-filter: r7.0.

test:
  pipeline:
    - runs: |
        mongod --version
        mongod --help
