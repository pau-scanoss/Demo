package:
  name: mongosh
  # When updating mongosh, ensure to adjust the NODE_JS_VERSION to match the version used by upstream, which rebuilds NodeJS 20.x from source, along with necessary patches, as a component of its build process, utilizing boxednode for this.
  version: 2.3.8
  epoch: 0
  description: The MongoDB Shell
  resources:
    cpu: 30
    memory: 60Gi
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - bash
      - brotli-dev
      - build-base
      - busybox
      - c-ares-dev
      - ca-certificates-bundle
      - curl
      - gnutar
      - icu-dev
      - krb5-dev
      - linux-headers
      - nghttp2-dev
      - nodejs-20
      # Newer versions (tested 10.9) get stuck correcting an old lockfile most of the time, this greatly improves
      # the odds of success.
      - npm=10.8.3
      - openssl-dev
      - py3-jinja2
      - py3-setuptools
      - python3
      - samurai
      - zlib-dev
  environment:
    SEGMENT_API_KEY: "dummy"

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/mongodb-js/mongosh
      tag: v${{package.version}}
      expected-commit: 0f0681f5ed67530071c9b3811cf5e18a222b9ae4

  - runs: |
      # Turning on command printing because of the npm bug, this helps track where it's failing.
      set -x

      # Increase npm log level to aide in debugging where their opaque build process gets stuck
      npm config set loglevel verbose

      npm install -g lerna
      npm install -g typescript

      # Install this manually ahead of time to avoid getting stuck in the post installation
      # due to the env var not working right for some reason
      PUPPETEER_SKIP_DOWNLOAD=true npm install puppeteer@21.0.3

      # Start the regular build process
      npm run bootstrap

  - runs: npm run compile-cli

  # mongosh rebuilds NodeJS 20.x from source as part of its build process. It's using a project called
  # boxednode to do this. We provide the same flags we give to our own NodeJS 20.x build.
  - runs: |
      node_version=$(node --version | sed 's/v//') # Removes the 'v' prefix and get the env node version

      npm install -G os-dns-native
      export BOXEDNODE_CONFIGURE_ARGS="--shared-brotli,--shared-zlib,--shared-openssl,--shared-cares,--shared-nghttp2,--ninja,--openssl-use-def-ca-store,--with-icu-default-data-dir=$(icu-config,--icudatadir),--with-intl=system-icu,--openssl-conf-name=openssl_conf,--without-corepack"
      NODE_JS_VERSION=$node_version npm run evergreen-release compile
      mkdir -p ${{targets.destdir}}/usr/bin/
      mv dist/mongosh ${{targets.destdir}}/usr/bin/

  - uses: strip

update:
  enabled: true
  github:
    identifier: mongodb-js/mongosh
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - mongod
  pipeline:
    - runs: |
        set +x
        mkdir -p /data/db
        mkdir -p /var/log/mongodb
        mongod --fork --logpath /var/log/mongodb/mongod.log
        echo "Started MongoDB"
        mongosh "mongodb://localhost:27017" --eval "printjson(db.serverStatus())"
        killall mongod
        mongosh --version
        mongosh --help
