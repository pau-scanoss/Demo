package:
  name: runc-fips
  version: 1.2.4
  epoch: 0
  description: CLI tool for spawning and running containers according to the OCI specification
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - autoconf
      - automake
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - go-fips
      - go-md2man
      - libseccomp-dev
      - libtool

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/opencontainers/runc
      tag: v${{package.version}}
      expected-commit: 6c52b3fc541fb26fe8c374d5f58112a0a5dbda66

  - uses: go/bump
    with:
      deps: golang.org/x/net@v0.33.0
      modroot: .

  - uses: go/build
    with:
      go-package: go-fips
      modroot: .
      packages: .
      output: runc
      tags: seccomp,urfave_cli_no_docs,netgo,osusergo
      ldflags: |
        -X main.gitCommit=$(git rev-parse HEAD)
        -X main.version=${{package.version}}

  - runs: |
      make man
      install -Dm644 ./man/man8/* -t "${{targets.destdir}}"/usr/share/man/man8/

  - uses: strip

subpackages:
  - name: ${{package.name}}-doc
    pipeline:
      - uses: split/manpages
    description: runc manpages

update:
  enabled: true
  github:
    identifier: opencontainers/runc
    strip-prefix: v

test:
  pipeline:
    - uses: test/go-fips-check
    - name: "Check runc version"
      runs: |
        runc --version
    - name: "Check runc help"
      runs: |
        runc --help
    - name: "Test runc features"
      runs: |
        runc features | grep -q "seccomp"
    - name: "Verify runc binary"
      runs: |
        [ -x "$(command -v runc)" ]
    - name: "Check runc state command"
      runs: |
        runc state non_existent_container || [ $? -eq 1 ]
    - name: "Check runc spec command"
      runs: |
        runc spec --rootless
        [ -f config.json ]
