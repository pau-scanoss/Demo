# NOTE: A license is required to use this package!
# To run Elasticsearch in FIPS mode, you will need to provide a license key. To obtain
# a license for Elasticsearch, see their subscriptions page [here](https://www.elastic.co/subscriptions).
# This package is equipped with the essential components for Elasticsearch to operate in
# FIPS mode. However, it's important for users to ensure they use it in line with
# FIPS compliance standards.
# This includes tasks such as keystore generation, configuration, and launching
# Elasticsearch with the correct configuration parameters.
package:
  name: elasticsearch-fips-8
  version: 8.17.0
  epoch: 3
  description:
  copyright:
    - license: SSPL-1.0 AND Elastic-2.0
  resources:
    cpu: 6
    memory: 30Gi
  dependencies:
    runtime:
      - bash # some helper scripts use bash
      - coreutils # eck operator init container runs date with iso format
      - curl # eck operator init container does a health check
      - elasticsearch-fips-8-config
      - grep
      - openjdk-17-default-jdk
      - openssl-config-fipshardened
      - ${{package.name}}-policy
      - tini
    provides:
      - elasticsearch=${{package.full-version}}

environment:
  environment:
    LANG: "en_US.UTF-8"
    JAVA_TOOL_OPTIONS: "-Dfile.encoding=UTF-8"
  contents:
    packages:
      - bouncycastle-fips~2.0
      - build-base
      - busybox
      - openjdk-17-default-jdk
      - wolfi-base

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+).*
    replace: $1
    to: major-version

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/elastic/elasticsearch
      tag: v${{package.version}}
      expected-commit: 2b6a7fed44faa321997703718f07ee0420804b41

  - runs: |
      ./gradlew localDistro -Dbuild.snapshot=false -Dlicense.key="x-pack/license-tools/src/test/resources/public.key"

      mkdir -p ${{targets.destdir}}/usr/share/elasticsearch/logs

      # https://github.com/elastic/elasticsearch/blob/d87b93f3174e82a86f4fad0ea8b85ac7b454f96d/plugins/examples/settings.gradle#L59-L76
      if [ "${{build.arch}}" = "aarch64" ]; then
        BUILD_DIR="linux-aarch64-tar"
      else
        BUILD_DIR="linux-tar"
      fi

      find distribution/archives
      install -dm777 ${{targets.destdir}}/usr/share/elasticsearch/
      mv distribution/archives/${BUILD_DIR}/build/install/elasticsearch-${{package.version}}/bin ${{targets.destdir}}/usr/share/elasticsearch
      mv distribution/archives/${BUILD_DIR}/build/install/elasticsearch-${{package.version}}/lib ${{targets.destdir}}/usr/share/elasticsearch
      mv distribution/archives/${BUILD_DIR}/build/install/elasticsearch-${{package.version}}/config ${{targets.destdir}}/usr/share/elasticsearch
      mv distribution/archives/${BUILD_DIR}/build/install/elasticsearch-${{package.version}}/modules ${{targets.destdir}}/usr/share/elasticsearch
      mv distribution/archives/${BUILD_DIR}/build/install/elasticsearch-${{package.version}}/plugins ${{targets.destdir}}/usr/share/elasticsearch
      mv distribution/archives/${BUILD_DIR}/build/install/elasticsearch-${{package.version}}/LICENSE.txt ${{targets.destdir}}/usr/share/elasticsearch

      # Use custom entrypoint with KeyStore password fix for FIPS
      mv ./docker-entrypoint.sh ${{targets.destdir}}/usr/share/elasticsearch/bin
      mkdir -p ${{targets.destdir}}/usr/local/bin
      ln -sf /usr/share/elasticsearch/bin/docker-entrypoint ${{targets.destdir}}/usr/local/bin/

      # Set permissions to read/write the config dir
      chmod -R 775 ${{targets.destdir}}/usr/share/elasticsearch/
      mkdir -p ${{targets.destdir}}/usr/bin
      for i in ${{targets.destdir}}/usr/share/elasticsearch/bin/*; do
        name=$(basename $i)
        ln -sf /usr/share/elasticsearch/bin/$name ${{targets.destdir}}/usr/bin/$name
      done

      # We get this from elasticsearch-fips-8-config
      mv ${{targets.destdir}}/usr/share/elasticsearch/config/elasticsearch.yml ${{targets.destdir}}/usr/share/elasticsearch/config/elasticsearch.example.yml

      # Manually set this to docker: https://github.com/elastic/elasticsearch/blob/58f45eabb116b245a0e607dbd900173ecfd46a0f/distribution/docker/src/docker/Dockerfile#L105
      sed -i -e 's/ES_DISTRIBUTION_TYPE=tar/ES_DISTRIBUTION_TYPE=docker/'  ${{targets.destdir}}/usr/share/elasticsearch/bin/elasticsearch-env

      # To remove problematic/unnecessary jar files
      rm ${{targets.destdir}}/usr/share/elasticsearch/lib/tools/plugin-cli/bc-fips-*.jar
      rm ${{targets.destdir}}/usr/share/elasticsearch/lib/tools/plugin-cli/bcpg-fips-*.jar

      mkdir -p ${{targets.destdir}}/usr/share/elasticsearch/lib

      # elasticsearch requires bcfips jars.
      # Symlink these from runtime dependency: 'openjdk-17-bcfips'.
      ln -sf /usr/share/java/bouncycastle-fips/*.jar ${{targets.destdir}}/usr/share/elasticsearch/lib/

      # Add java.policy
      mkdir -p ${{targets.destdir}}/usr/share/elasticsearch/config
      mv java.policy ${{targets.destdir}}/usr/share/elasticsearch/config/java.policy

subpackages:
  - name: elasticsearch-fips-8-config
    description: Creates a usable elasticsearch.yml config
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/share/elasticsearch/config
          install -m644 elasticsearch.yml ${{targets.subpkgdir}}/usr/share/elasticsearch/config/elasticsearch.yml

  - name: ${{package.name}}-policy-140-2
    description: bcfips 140-2 dependencies
    checks:
      disabled:
        - empty
    dependencies:
      runtime:
        - bcfips-policy-140-2-j17
      # Higher than 140-3
      provider-priority: 10
      provides:
        - ${{package.name}}-policy=${{package.full-version}}

  - name: ${{package.name}}-policy-140-3
    description: bcfips 140-3 dependencies
    dependencies:
      runtime:
        - bcfips-policy-140-3-j17
      # Lower than 140-2
      provider-priority: 5
      provides:
        - ${{package.name}}-policy=${{package.full-version}}
    pipeline:
      - runs: |
          # Move bcutil-fips.jar to 140-3 subpackage
          mkdir -p ${{targets.contextdir}}/usr/share/elasticsearch/lib/
          mv ${{targets.destdir}}/usr/share/elasticsearch/lib/bcutil-fips.jar ${{targets.contextdir}}/usr/share/elasticsearch/lib/

  - name: ${{package.name}}-bitnami
    description: ElasticSearch FIPs for Bitnami
    dependencies:
      provides:
        - elasticsearch-bitnami-fips=${{package.full-version}}
      runtime:
        - bash # some helper scripts use bash
        - busybox
        - coreutils # eck operator init container runs date with iso format
        - curl # eck operator init container does a health check
        - openjdk-17-default-jvm
        - posix-libc-utils # required for helm install
        - yq
        - openssl-config-fipshardened
    pipeline:
      - uses: bitnami/compat
        with:
          image: elasticsearch
          version-path: ${{vars.major-version}}/debian-12
      - runs: |
          mkdir -p ${{targets.contextdir}}/opt/bitnami/elasticsearch

          # I know this is awful, but Bitnami doesn't like symlinks
          cp -r ${{targets.destdir}}/usr/share/elasticsearch/* ${{targets.contextdir}}/opt/bitnami/elasticsearch

          # Install config
          install -m644 elasticsearch.yml ${{targets.contextdir}}/opt/bitnami/elasticsearch/config/elasticsearch.yml
          mkdir -p ${{targets.contextdir}}/opt/bitnami/elasticsearch/config.default
          cp -r ${{targets.contextdir}}/opt/bitnami/elasticsearch/config/* \
            ${{targets.contextdir}}/opt/bitnami/elasticsearch/config.default/

          # Use subpackage path while unpacking
          find . -iname "*.sh" -exec sed 's#/opt/bitnami#${{targets.contextdir}}/opt/bitnami#g' -i {} \;
            ${{targets.contextdir}}/opt/bitnami/scripts/elasticsearch/postunpack.sh || true
          # Restore path
          find ${{targets.contextdir}}/opt/bitnami -type f -exec sed 's#${{targets.contextdir}}##g' -i {} \;

          # Set java home
          sed -i 's|export JAVA_HOME=/opt/bitnami/java|export JAVA_HOME=/usr/lib/jvm/java-17-openjdk|' ${{targets.contextdir}}/opt/bitnami/scripts/elasticsearch/run.sh
          sed -i 's|export ES_JAVA_HOME=/opt/bitnami/java|export ES_JAVA_HOME=/usr/lib/jvm/java-17-openjdk|' ${{targets.contextdir}}/opt/bitnami/scripts/elasticsearch/run.sh

          # Set wide permissions
          chmod -R 775 ${{targets.contextdir}}/opt/bitnami/elasticsearch

          # Remove non-bitnami entrypoint script
          rm ${{targets.contextdir}}/opt/bitnami/elasticsearch/bin/docker-entrypoint.sh

          # Symlink binaries to path
          mkdir -p ${{targets.destdir}}/usr/bin
          for i in ${{targets.destdir}}/opt/bitnami/elasticsearch/bin/*; do
            name=$(basename $i)
            ln -sf /opt/bitnami/elasticsearch/bin/$name ${{targets.destdir}}/usr/bin/$name
          done

          mkdir -p ${{targets.contextdir}}/opt/bitnami
          ln -sf /usr/lib/jvm/java-17-openjdk ${{targets.contextdir}}/opt/bitnami/java

          mkdir -p ${{targets.contextdir}}/docker-entrypoint-initdb.d
          chmod -R 775 ${{targets.contextdir}}/docker-entrypoint-initdb.d

          mkdir -p ${{targets.contextdir}}/bitnami/elasticsearch
          mkdir -p ${{targets.contextdir}}/bitnami/elasticsearch/data
          mkdir -p ${{targets.contextdir}}/bitnami/elasticsearch/plugins
    # TODO: convert tests to make use of "daemon-check-output"
    test:
      environment:
        contents:
          packages:
            - bash
            - busybox
            - coreutils
            - openjdk-17-default-jvm
            - yq
            - shadow
            - sudo
            - wolfi-base
            - openssl-config-fipshardened
        environment:
          ES_JAVA_HOME: "/usr/lib/jvm/java-17-openjdk"
          ES_USER: elasticsearch
      pipeline:
        - name: "Verify Elasticsearch Binary for Bitnami"
          runs: |
            set -x
            useradd $ES_USER
            chown -R "${ES_USER}:${ES_USER}" /opt/bitnami/elasticsearch
            sudo -E -u $ES_USER /opt/bitnami/elasticsearch/bin/elasticsearch -d -p /tmp/elasticsearch.pid || exit 0
        - uses: java-fips/algorithms
          with:
            java-version: 17
            fips-compliance-version: 140-2

test:
  environment:
    environment:
      ES_JAVA_HOME: "/usr/lib/jvm/java-17-openjdk"
      JDK_JAVA_OPTIONS: "-Djavax.net.ssl.trustStoreType=FIPS -Djava.security.policy=/usr/share/elasticsearch/config/java.policy"
  pipeline:
    - name: "Check for LICENSE.txt"
      runs: ls -alh /usr/share/elasticsearch/LICENSE.txt
    - runs: |
        # Using generic tests as entire tests require creation of keystore and it requires separate env
        /usr/share/elasticsearch/bin/elasticsearch -h
    - uses: java-fips/algorithms
      with:
        java-version: 17
        fips-compliance-version: 140-2

update:
  enabled: true
  github:
    identifier: elastic/elasticsearch
    strip-prefix: v
    tag-filter: v8.
