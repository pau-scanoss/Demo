package:
  name: istio-1.23
  version: 1.23.4
  epoch: 1
  description: Istio is an open source service mesh that layers transparently onto existing distributed applications.
  copyright:
    - license: Apache-2.0

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+\.\d+)\.\d+$
    replace: "$1"
    to: major-minor-version

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - go
  environment:
    CGO_ENABLED: "0"

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/istio/istio
      tag: ${{package.version}}
      expected-commit: e0508c3e94a50a41e33f39362e0825913b6d0521

  - uses: go/bump
    with:
      deps: golang.org/x/crypto@v0.31.0 golang.org/x/net@v0.33.0

subpackages:
  - name: istio-cni-${{vars.major-minor-version}}
    pipeline:
      - uses: go/build
        with:
          packages: ./cni/cmd/istio-cni
          output: istio-cni
      - uses: strip
    dependencies:
      provides:
        - istio-cni=${{package.full-version}}

  - name: istio-cni-${{vars.major-minor-version}}-compat
    pipeline:
      - runs: |
          # See https://github.com/istio/istio/blob/1.20.2/cni/deployments/kubernetes/Dockerfile.install-cni
          mkdir -p ${{targets.subpkgdir}}/opt/cni/bin
          ln -sf /usr/bin/istio-cni ${{targets.subpkgdir}}/opt/cni/bin/istio-cni
    dependencies:
      provides:
        - istio-cni-compat=${{package.full-version}}

  - name: istio-install-cni-${{vars.major-minor-version}}
    pipeline:
      - uses: go/build
        with:
          packages: ./cni/cmd/install-cni
          output: install-cni
      - uses: strip
    dependencies:
      provides:
        - istio-install-cni=${{package.full-version}}

  - name: istio-install-cni-${{vars.major-minor-version}}-compat
    pipeline:
      - runs: |
          # See https://github.com/istio/istio/blob/1.20.0/cni/deployments/kubernetes/Dockerfile.install-cni
          mkdir -p ${{targets.subpkgdir}}/usr/local/bin
          ln -sf /usr/bin/install-cni ${{targets.subpkgdir}}/usr/local/bin/install-cni
    dependencies:
      provides:
        - istio-install-cni-compat=${{package.full-version}}

  - name: istio-operator-${{vars.major-minor-version}}
    pipeline:
      - uses: go/build
        with:
          packages: ./operator/cmd/operator
          output: operator
          # Extracted from https://github.com/istio/istio/blob/4358b84b911a80ba09ef36ac00ad85535a77e7ca/common/scripts/report_build_info.sh#L41-L48
          # Use this instead for buildStatus once our pipeline stops dirtying the git tree: "$(if git diff-index --quiet HEAD --; then echo "Clean"; else echo "Modified"; fi)"
          ldflags: |
            -X istio.io/istio/pkg/version.buildVersion=${{package.version}}
            -X istio.io/istio/pkg/version.buildGitRevision=$(git rev-parse HEAD)
            -X istio.io/istio/pkg/version.buildTag=$(git describe --tags --always)
            -X istio.io/istio/pkg/version.buildStatus="Clean"
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/var/lib/istio
          mv manifests ${{targets.subpkgdir}}/var/lib/istio/manifests

  - name: istio-pilot-agent-${{vars.major-minor-version}}
    pipeline:
      - uses: go/build
        with:
          packages: ./pilot/cmd/pilot-agent
          output: pilot-agent
          # Extracted from https://github.com/istio/istio/blob/4358b84b911a80ba09ef36ac00ad85535a77e7ca/common/scripts/report_build_info.sh#L41-L48
          # Use this instead for buildStatus once our pipeline stops dirtying the git tree: "$(if git diff-index --quiet HEAD --; then echo "Clean"; else echo "Modified"; fi)"
          ldflags: |
            -X istio.io/istio/pkg/version.buildVersion=${{package.version}}
            -X istio.io/istio/pkg/version.buildGitRevision=$(git rev-parse HEAD)
            -X istio.io/istio/pkg/version.buildTag=$(git describe --tags --always)
            -X istio.io/istio/pkg/version.buildStatus="Clean"
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/var/lib/istio/envoy
          cp ./tools/packaging/common/envoy_bootstrap.json \
            ${{targets.subpkgdir}}/var/lib/istio/envoy/envoy_bootstrap_tmpl.json
          cp ./tools/packaging/common/gcp_envoy_bootstrap.json \
            ${{targets.subpkgdir}}/var/lib/istio/envoy/gcp_envoy_bootstrap_tmpl.json

  - name: istio-pilot-agent-${{vars.major-minor-version}}-compat
    pipeline:
      - runs: |
          # link /usr/local/bin/pilot-agent -> /usr/bin/pilot-agent to match
          # what the Istio Helm charts may expect.
          mkdir -p ${{targets.subpkgdir}}/usr/local/bin
          ln -sf /usr/bin/pilot-agent ${{targets.subpkgdir}}/usr/local/bin/pilot-agent
    dependencies:
      provides:
        - istio-pilot-agent-compat=${{package.full-version}}

  - name: istio-pilot-discovery-${{vars.major-minor-version}}
    pipeline:
      - uses: go/build
        with:
          packages: ./pilot/cmd/pilot-discovery
          output: pilot-discovery
          # Extracted from https://github.com/istio/istio/blob/4358b84b911a80ba09ef36ac00ad85535a77e7ca/common/scripts/report_build_info.sh#L41-L48
          # Use this instead for buildStatus once our pipeline stops dirtying the git tree: "$(if git diff-index --quiet HEAD --; then echo "Clean"; else echo "Modified"; fi)"
          ldflags: |
            -X istio.io/istio/pkg/version.buildVersion=${{package.version}}
            -X istio.io/istio/pkg/version.buildGitRevision=$(git rev-parse HEAD)
            -X istio.io/istio/pkg/version.buildTag=$(git describe --tags --always)
            -X istio.io/istio/pkg/version.buildStatus="Clean"
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/var/lib/istio/envoy
          cp ./tools/packaging/common/envoy_bootstrap.json \
            ${{targets.subpkgdir}}/var/lib/istio/envoy/envoy_bootstrap_tmpl.json
          cp ./tools/packaging/common/gcp_envoy_bootstrap.json \
            ${{targets.subpkgdir}}/var/lib/istio/envoy/gcp_envoy_bootstrap_tmpl.json

  - name: istio-pilot-discovery-${{vars.major-minor-version}}-compat
    pipeline:
      - runs: |
          # link /usr/local/bin/pilot-discovery -> /usr/bin/pilot-discovery to match
          # what the Istio Helm charts may expect.
          mkdir -p ${{targets.subpkgdir}}/usr/local/bin
          ln -sf /usr/bin/pilot-discovery ${{targets.subpkgdir}}/usr/local/bin/pilot-discovery
    dependencies:
      provides:
        - istio-discovery-compat=${{package.full-version}}

update:
  enabled: true
  ignore-regex-patterns:
    - '-rc'
    - '-beta'
  github:
    identifier: istio/istio
    tag-filter-prefix: 1.23.
    use-tag: true

test:
  environment:
    contents:
      packages:
        - jq
        - grep
        - istio-operator-${{vars.major-minor-version}}
        - istio-pilot-agent-${{vars.major-minor-version}}
        - istio-pilot-discovery-${{vars.major-minor-version}}
  pipeline:
    - runs: |
        # check version/tag/commit are not "unknown" for operator
        operator version -o json | jq .clientVersion.version | grep -q ${{package.version}}
        operator version -o json | jq .clientVersion.revision | grep -qv unknown
        operator version -o json | jq .clientVersion.tag | grep -qv unknown

        # check version/tag/commit are not "unknown" for pilot-discovery
        pilot-discovery version -o json | jq .clientVersion.version | grep -q ${{package.version}}
        pilot-discovery version -o json | jq .clientVersion.revision | grep -qv unknown
        pilot-discovery version -o json | jq .clientVersion.tag | grep -qv unknown

        # check version/tag/commit are not "unknown" for pilot-agent
        pilot-agent version -o json | jq .clientVersion.version | grep -q ${{package.version}}
        pilot-agent version -o json | jq .clientVersion.revision | grep -qv unknown
        pilot-agent version -o json | jq .clientVersion.tag | grep -qv unknown
