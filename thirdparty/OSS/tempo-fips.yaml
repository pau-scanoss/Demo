package:
  name: tempo-fips
  version: "2.7.0"
  epoch: 0
  description: Grafana Tempo is a high volume, minimal dependency distributed tracing backend.
  copyright:
    - license: AGPL-3.0-or-later

environment:
  contents:
    packages:
      - go-fips

pipeline:
  - uses: git-checkout
    with:
      expected-commit: b0da6b4815d34b5063ff78567f1abcc28466fc90
      repository: https://github.com/grafana/tempo
      tag: v${{package.version}}

  - uses: go/remove-cgo-enabled-0

  - runs: |
      make tempo
      install -Dm755 bin/linux/tempo-$(go env GOARCH) ${{targets.destdir}}/usr/bin/tempo

  - uses: strip

data:
  - name: components
    items:
      query: query
      vulture: vulture
      cli: cli

subpackages:
  - range: components
    name: "${{package.name}}-${{range.key}}"
    pipeline:
      - runs: |
          make tempo-${{range.key}}
          install -Dm755 bin/linux/tempo-${{range.key}}-$(go env GOARCH) ${{targets.subpkgdir}}/usr/bin/tempo-${{range.key}}
      - uses: strip

update:
  enabled: true
  github:
    identifier: grafana/tempo
    strip-prefix: v
    tag-filter: v

test:
  environment:
    contents:
      packages:
        - curl
  pipeline:
    - uses: test/go-fips-check
    - name: Smoke test for Tempo binary
      runs: |
        tempo --help
        tempo --version
    - name: Test Tempo server start
      runs: |
        # Create a simple tempo.yaml config file
        cat <<EOF > tempo.yaml
        auth_enabled: false
        server:
          http_listen_port: 3200
        distributor:
          receivers:
            jaeger:
              protocols:
                thrift_compact:
        ingester:
          trace_idle_period: 10s
          max_block_bytes: 1048576
        storage:
          trace:
            backend: local
            local:
              path: /tmp/tempo/traces
        EOF

        tempo start -config.file=tempo.yaml &

        attempts=0
        until curl -f http://localhost:3200/ready || [ $attempts -eq 5 ]; do
          sleep 10
          attempts=$((attempts+1))
        done
        if [ $attempts -eq 5 ]; then exit 1; fi
