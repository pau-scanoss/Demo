package:
  name: cni-plugins-fips
  version: 1.6.2
  epoch: 0
  description: Some reference and example networking plugins, maintained by the CNI team.
  copyright:
    - license: Apache-2.0

# This package contains cni binaries. They can be copied out of Wolfi
# onto older host-os During build-time link against an older glibc, to
# ensure go-fips built cni remain ABI compatible with old foreign
# host-os. Majority of regular go-fips binaries/images do not need
# this.
environment:
  contents:
    packages:
      - oldglibc
  environment:
    CGO_CFLAGS: -I/usr/lib/oldglibc/include
    CGO_LDFLAGS: -L/usr/lib/oldglibc/lib

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/containernetworking/plugins
      tag: v${{package.version}}
      expected-commit: 7f756b411efc3d3730c707e2cc1f2baf1a66e28c

  - uses: go/bump
    with:
      deps: golang.org/x/net@v0.33.0

  - uses: go/build
    with:
      packages: ./plugins/ipam/dhcp ./plugins/ipam/host-local ./plugins/ipam/static ./plugins/main/bridge ./plugins/main/dummy ./plugins/main/host-device ./plugins/main/ipvlan ./plugins/main/loopback ./plugins/main/macvlan ./plugins/main/ptp ./plugins/main/tap ./plugins/main/vlan ./plugins/meta/bandwidth ./plugins/meta/firewall ./plugins/meta/portmap ./plugins/meta/sbr ./plugins/meta/tuning ./plugins/meta/vrf
      ldflags: -X github.com/containernetworking/plugins/pkg/utils/buildversion.BuildVersion=$(git describe --tags --dirty)
      output: ./
      go-package: go-fips

data:
  - name: plugins
    items:
      bridge: Creates a bridge, adds the host and the container to it.
      ipvlan: Adds an ipvlan interface in the container.
      loopback: Set the state of loopback interface to up
      macvlan: Creates a new MAC address, forwards all traffic to that to the container.
      ptp: Creates a veth pair.
      vlan: Allocates a vlan device.
      host-device: Move an already-existing device into a container.
      dummy: Creates a new Dummy device in the container.
      dhcp: Runs a daemon on the host to make DHCP requests on behalf of the container
      host-local: Maintains a local database of allocated IPs
      static: Allocate a single static IPv4/IPv6 address to container. It's useful in debugging purpose.
      tuning: Tweaks sysctl parameters of an existing interface
      portmap: An iptables-based portmapping plugin. Maps ports from the host's address space to the container.
      bandwidth: Allows bandwidth-limiting through use of traffic control tbf (ingress/egress).
      sbr: A plugin that configures source based routing for an interface (from which it is chained).
      firewall: A firewall plugin which uses iptables or firewalld to add rules to allow traffic to/from the container.

# CNI Plugins, separated into groups
subpackages:
  - name: "${{package.name}}-main"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          for f in bridge \
                    ipvlan \
                    loopback \
                    macvlan \
                    ptp \
                    vlan \
                    host-device \
                    dummy; do
            cp ${{targets.destdir}}/usr/bin/$f "${{targets.subpkgdir}}"/usr/bin/
          done
  - name: "${{package.name}}-ipam"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          for f in dhcp \
                    host-local \
                    static; do
            cp ${{targets.destdir}}/usr/bin/$f "${{targets.subpkgdir}}"/usr/bin/
          done
  - name: "${{package.name}}-meta"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          for f in tuning \
                    portmap \
                    bandwidth \
                    sbr \
                    firewall; do
            cp ${{targets.destdir}}/usr/bin/$f "${{targets.subpkgdir}}"/usr/bin/
          done
  - range: plugins
    name: "${{package.name}}-${{range.key}}"
    description: ${{range.value}}
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          cp ${{targets.destdir}}/usr/bin/${{range.key}} "${{targets.subpkgdir}}"/usr/bin
  - range: plugins
    name: ${{package.name}}-${{range.key}}-compat
    dependencies:
      runtime:
        - "${{package.name}}-${{range.key}}"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/opt/cni/bin
          ln -s /usr/bin/${{range.key}} "${{targets.subpkgdir}}"/opt/cni/bin/${{range.key}}

update:
  enabled: true
  github:
    identifier: containernetworking/plugins
    strip-prefix: v

test:
  pipeline:
    - runs: |
        bandwidth --version
        bandwidth --help
        bridge --version
        bridge --help
        dhcp --version
        dhcp --help
        dummy --version
        dummy --help
        firewall --version
        firewall --help
        host-device --version
        host-device --help
        host-local --version
        host-local --help
        ipvlan --version
        ipvlan --help
        loopback --version
        loopback --help
        macvlan --version
        macvlan --help
        portmap --version
        portmap --help
        ptp --version
        ptp --help
        sbr --version
        sbr --help
        static --version
        static --help
        tap --version
        tap --help
        tuning --version
        tuning --help
        vlan --version
        vlan --help
        vrf --version
        vrf --help
