#nolint:valid-pipeline-git-checkout-commit,valid-pipeline-git-checkout-tag
package:
  name: cilium-envoy-fips-1.16
  version: 1.16.5
  epoch: 2
  description: Envoy with additional cilium plugins
  copyright:
    - license: Apache-2.0
  resources:
    cpu: 20
    memory: 50Gi
  dependencies:
    provides:
      - cilium-envoy-fips=${{package.full-version}}

environment:
  contents:
    packages:
      - apk-tools
      - bash
      - bazel-6
      - binutils
      # for fips config & fips-provider
      - boringssl-fips-static
      - build-base
      - busybox
      - ca-certificates-bundle
      - clang-17
      - clang-17-dev
      - cmake
      - coreutils # for GNU install
      - git
      - go-fips
      - isl-dev
      - libtool
      - llvm-libcxx-17
      - llvm-libcxx-17-dev
      - llvm-libcxxabi-17
      - llvm-lld-17
      - llvm17
      - llvm17-dev
      - openjdk-11
      - patch
      - python3-dev
      - samurai
      - wolfi-baselayout

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/cilium/cilium
      tag: v${{package.version}}
      expected-commit: ad6882773c5f89feda9c295276707f01de269296
      destination: cilium

  - uses: git-checkout
    with:
      repository: https://github.com/cilium/proxy
      # Branch from https://github.com/cilium/cilium/blob/v1.16.5/images/cilium/Dockerfile
      # Note often the branch is updated with dependencies updates, no tags
      # See CILIUM_PROXY_COMMIT for anchor point
      branch: v1.30
      depth: 1000

  - name: Get the CILIUM_PROXY_COMMIT and reset to it
    runs: |
      ENVOY_SHA=$(grep 'ARG.*cilium-envoy' ./cilium/images/cilium/Dockerfile \
        | sed "s/^ARG.*:v[0-9.]\+-[0-9]\+-//g" | cut -d@ -f1)

      git reset --hard $ENVOY_SHA

  - uses: go/bump
    with:
      deps: golang.org/x/net@v0.33.0

  - runs: |
      # Bazel errors out on toolchain stanza
      sed -i '/$toolchain /d' go.mod
      # Bazel errors out on go point release
      sed -i 's|^\(go 1\.[0-9]*\)\.[0-9]*|\1|' go.mod

  - name: Build and Install proxylib then Remove go-fips from the build env
    runs: |
      cd ./proxylib
      make
      mkdir -p ${{targets.destdir}}/usr/lib
      cp -v libcilium.so ${{targets.destdir}}/usr/lib/libcilium.so

      # Remove go-fips, openssl-config-fipshardened and all from the build environment. As it is only required for building proxylib with go-fips.
      # Reason: https://github.com/chainguard-dev/enterprise-packages/pull/12174#issuecomment-2563993262
      apk del go-fips go-msft* openssl-config-fipshardened openssl-provider-fips openssl-fips-test binutils-gold

  - name: use-precompiled-boringssl-from-build-env patch
    runs: |
      # Append new patch use-precompiled-boringssl-from-build-environment.patch to the envoy patches entry in WORKSPACE file.
      # it will search for the patch entry 0003-listener-add-socket-options.patch and append the new patch entry after it.
      # This patch is sets the code to use the precompiled boringssl from the build environment.
      sed -i "/0003-listener-add-socket-options.patch/a\\
         \"//:use-precompiled-boringssl-from-build-environment.patch\"," WORKSPACE

  - name: Fix the toolchain and root user error
    runs: |
      # The Python interpreter complains about being run as root, there's a flag to pass to disable that warning.
      sed -i 's/envoy_dependencies_extra()/envoy_dependencies_extra(ignore_root_user_error=True)/g' WORKSPACE

      # The toolchain at cilium/proxy has paths that are specific to their CI. https://github.com/cilium/proxy/blob/main/WORKSPACE#L3
      # Unregister to use Wolfi's toolchain available in the build env.
      sed 's/register_toolchains/#register_toolchains/g' -i WORKSPACE

  - runs: |
      export JAVA_HOME=/usr/lib/jvm/java-11-openjdk
      mkdir -p .cache/bazel/_bazel_root

      ./bazel/setup_clang.sh /usr

      # Use libc++ to be consistent with other Wolfi Envoy packages.
      echo "build --config=libc++" >> user.bazelrc

      mkdir -p ${{targets.destdir}}/usr/bin

      bazel build --fission=no --config=clang \
        --discard_analysis_cache \
        --nokeep_state_after_build \
        --notrack_incremental_state \
        --conlyopt="-Wno-strict-prototypes" \
        `# The thread-saftey analysis flagged some issue in upstream code` \
        --cxxopt="-Wno-thread-safety" \
        --verbose_failures -c opt //:cilium-envoy-starter
      install -m 755 bazel-bin/cilium-envoy-starter ${{targets.destdir}}/usr/bin/cilium-envoy-starter

      bazel build --fission=no --config=clang \
        --discard_analysis_cache \
        --nokeep_state_after_build \
        --notrack_incremental_state \
        --conlyopt="-Wno-strict-prototypes" \
        `# The thread-saftey analysis flagged some issue in upstream code` \
        --cxxopt="-Wno-thread-safety" \
        --verbose_failures -c opt //:cilium-envoy
      install -m 755 bazel-bin/cilium-envoy ${{targets.destdir}}/usr/bin/cilium-envoy

  - uses: strip

test:
  pipeline:
    - uses: test/go-fips-check
    - runs: cilium-envoy --version

update:
  enabled: true
  github:
    use-tag: true
    identifier: cilium/cilium
    strip-prefix: v
    tag-filter-prefix: v1.16.
