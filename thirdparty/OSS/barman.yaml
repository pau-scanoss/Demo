package:
  name: barman
  version: 3.12.1
  epoch: 1
  description: Backup and Recovery Manager for PostgreSQL
  copyright:
    - license: GPL-3.0-only
  options:
    # Don't depend on external libraries included in virtual environments
    no-depends: true
    # Don't resolve libraries installed in virtual environments as providers
    no-provides: true
  dependencies:
    runtime:
      - py${{vars.py-version}}-psycopg2
      - py${{vars.py-version}}-setuptools
      - python-${{vars.py-version}}

vars:
  py-version: 3.12

environment:
  contents:
    packages:
      - busybox
      - py${{vars.py-version}}-build
      - py${{vars.py-version}}-installer
      - py${{vars.py-version}}-psycopg2
      - py${{vars.py-version}}-setuptools
      - py${{vars.py-version}}-wheel
      - python-${{vars.py-version}}-dev

pipeline:
  - uses: git-checkout
    with:
      expected-commit: ebffcd3bf44fd939bdfdbf7092b341e59d047fb1
      repository: https://github.com/EnterpriseDB/barman
      tag: release/${{package.version}}

  - runs: |
      # Create virtual environment
      python -m venv venv --system-site-packages
      source venv/bin/activate

      # Install barman
      pip install .

      # Remove pip
      pip uninstall --yes pip

      # Use Python in virtual environment
      sed -i "s|/home/build/venv|/usr/share/barman|g" venv/pyvenv.cfg
      sed -i "s|/home/build/venv|/usr/share/barman|g" venv/bin/*

      # Install virtual environment
      mkdir -p ${{targets.contextdir}}/usr/share/barman
      cp -r venv/* ${{targets.contextdir}}/usr/share/barman/

      # Symlink barman to path
      mkdir -p ${{targets.contextdir}}/usr/bin
      for util in ${{targets.contextdir}}/usr/share/barman/bin/barman*; do
        ln -sf /usr/share/barman/bin/$(basename ${util}) ${{targets.contextdir}}/usr/bin/$(basename ${util})
      done

subpackages:
  - name: barman-cloudnative-pg
    description: Barman with CloudNative PG additions
    options:
      no-depends: true
      no-provides: true
    dependencies:
      provides:
        - barman=${{package.full-version}}
      runtime:
        - py${{vars.py-version}}-psycopg2
        - py${{vars.py-version}}-setuptools
        - python-${{vars.py-version}}
    pipeline:
      - runs: |
          # Restore virtual env paths
          sed -i "s|/usr/share/barman|/home/build/venv|g" venv/pyvenv.cfg
          sed -i "s|/usr/share/barman|/home/build/venv|g" venv/bin/*

          # Re-initialize and activate virtual env
          python -m venv venv --system-site-packages
          source venv/bin/activate

          # Patch GHSA-248v-346w-9cwc
          pip install certifi==2024.07.04

          # Install additional dependencies used by CloudNative PG
          # Pulled from: https://github.com/cloudnative-pg/postgres-containers/blob/main/Debian/16/bookworm/requirements.txt
          pip install -I --no-compile azure-core azure-identity azure-storage-blob \
            boto3 botocore cachetools certifi cffi charset-normalizer cryptography \
            google-api-core google-auth google-cloud-core google-cloud-storage \
            google-crc32c google-resumable-media googleapis-common-protos idna \
            isodate jmespath msal msal-extensions packaging portalocker proto-plus \
            protobuf pyasn1 pyasn1-modules pycparser pyjwt[crypto] python-dateutil \
            python-snappy requests rsa s3transfer six typing-extensions urllib3

          # Remove pip
          pip uninstall --yes pip

          # Use Python in virtual environment
          sed -i "s|/home/build/venv|/usr/share/barman|g" venv/pyvenv.cfg
          sed -i "s|/home/build/venv|/usr/share/barman|g" venv/bin/*

          # Install virtual environment
          mkdir -p ${{targets.contextdir}}/usr/share/barman
          cp -r venv/* ${{targets.contextdir}}/usr/share/barman/

          # Symlink barman to path
          mkdir -p ${{targets.contextdir}}/usr/bin
          for util in ${{targets.contextdir}}/usr/share/barman/bin/barman*; do
            ln -sf /usr/share/barman/bin/$(basename ${util}) ${{targets.contextdir}}/usr/bin/$(basename ${util})
          done

test:
  pipeline:
    - runs: |
        barman --help
        barman --version
        barman-cloud-backup --version
        barman-cloud-backup --help
        barman-cloud-backup-delete --version
        barman-cloud-backup-delete --help
        barman-cloud-backup-keep --version
        barman-cloud-backup-keep --help
        barman-cloud-backup-list --version
        barman-cloud-backup-list --help
        barman-cloud-backup-show --version
        barman-cloud-backup-show --help
        barman-cloud-check-wal-archive --version
        barman-cloud-check-wal-archive --help
        barman-cloud-restore --version
        barman-cloud-restore --help
        barman-cloud-wal-archive --version
        barman-cloud-wal-archive --help
        barman-cloud-wal-restore --version
        barman-cloud-wal-restore --help
        barman-wal-archive --version
        barman-wal-archive --help
        barman-wal-restore --version
        barman-wal-restore --help

update:
  enabled: true
  github:
    identifier: EnterpriseDB/barman
    strip-prefix: release/
