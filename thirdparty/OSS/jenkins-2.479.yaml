package:
  name: jenkins-2.479
  version: 2.479.3
  epoch: 0
  description:
  copyright:
    - license: MIT
  dependencies:
    runtime:
      # Jenkins requires both bash and busybox.
      - bash
      - busybox
      - coreutils
      - glibc-locale-en
      - ttf-dejavu
      - tzdata

environment:
  contents:
    packages:
      - autoconf
      - automake
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - coreutils
      - git
      - glibc-locale-en
      - maven
      - openjdk-17-default-jdk
      - openssh-client
      - patch
      - tini
      - ttf-dejavu
      - tzdata

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/jenkinsci/jenkins
      tag: jenkins-${{package.version}}
      expected-commit: ff61e3756a7e7c301c28a5a042f965ebcc6a90cc

  - uses: maven/pombump

  - runs: mvn spotless:apply

  - runs: |
      # Use commit timestamp as build date to satisfy Jenkins in-place upgrade functionality (.war file needs to match release date)
      export SOURCE_DATE_EPOCH=$(git show -s --format=%ct)

      export JAVA_HOME=/usr/lib/jvm/java-17-openjdk
      export LANG=en_US.UTF-8

      export MAVEN_OPTS="-DforkCount=2"

      # tests take ~1.5 hours to run and have passed 100% since the initial addition of Jenkins, let's skip them and save time + resources
      mvn install -DskipTests=true

      mkdir -p ${{targets.destdir}}/usr/share/java/jenkins
      mv war/target/jenkins.war ${{targets.destdir}}/usr/share/java/jenkins/

update:
  enabled: true
  github:
    identifier: jenkinsci/jenkins
    strip-prefix: jenkins-
    tag-filter-prefix: jenkins-2.479

test:
  environment:
    contents:
      packages:
        - openjdk-17-default-jvm
        - jenkins-compat
        - jenkins-entrypoint
  pipeline:
    - name: "Check .war timestamp is being set correctly (not zero)"
      runs: |
        WAR_TIME=$(stat -c %Y /usr/share/java/jenkins/jenkins.war)
        if [ "$WAR_TIME" -eq 0 ]; then
        echo "WAR file timestamp is zero"
        exit 1
        fi
    - runs: |
        cleanup() {
          echo "Cleaning up..."
          kill $JENKINS_PID
        }
        trap cleanup EXIT
        /usr/bin/java -Duser.home=/var/jenkins_home -jar /usr/share/java/jenkins/jenkins.war --version
        echo "Launching Jenkins and performing log validation..."
        /usr/bin/java -Duser.home=/var/jenkins_home -jar /usr/share/java/jenkins/jenkins.war > jenkins.log 2>&1 &
        JENKINS_PID=$!
        TIMEOUT=60
        while ! grep -q "Jenkins is fully up and running" jenkins.log && [ $TIMEOUT -gt 0 ]; do
          sleep 1
          TIMEOUT=$((TIMEOUT-1))
        done
        # Check for timeout without Jenkins being fully up
        if [ $TIMEOUT -eq 0 ]; then
          echo "Attempted to launch Jenkins in melange test, but log validation failed."
          exit 1
        fi
        # Perform checks for FAIL in the logs
        if grep -Eq "FAIL|FAILURE|ERROR" jenkins.log; then
          echo "Successfully launched Jenkins in melange tests, but errors where found in the logs."
          exit 1
        fi
