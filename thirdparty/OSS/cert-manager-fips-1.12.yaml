package:
  name: cert-manager-fips-1.12
  version: "1.12.15"
  epoch: 0
  description: Automatically provision and manage TLS certificates in Kubernetes
  copyright:
    - license: Apache-2.0
  dependencies:
    provides:
      - cert-manager-fips=${{package.full-version}}

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+\.\d+)\.\d+$
    replace: "$1"
    to: major-minor-version

environment:
  contents:
    packages:
      - go-fips

pipeline:
  - uses: git-checkout
    with:
      expected-commit: f189caddc32ccef52d251121fc6cdb2d3f16f7d7
      repository: https://github.com/cert-manager/cert-manager
      tag: v${{package.version}}

  - uses: go/bump
    with:
      deps: oras.land/oras-go@v1.2.6 golang.org/x/crypto@v0.31.0 golang.org/x/net@v0.33.0
      modroot: cmd/ctl

  # https://github.com/cert-manager/cert-manager/blob/master/make/00_mod.mk#L54
  - uses: go/build
    with:
      go-package: go-fips
      modroot: cmd/controller
      packages: main.go
      output: controller-linux-${{build.goarch}}
      ldflags: -X github.com/cert-manager/cert-manager/pkg/util.AppVersion=$(git describe --tags --always --match='v*' --abbrev=14 --dirty) -X github.com/cert-manager/cert-manager/pkg/util.AppGitCommit=$(git rev-parse HEAD)

  - uses: go/build
    with:
      go-package: go-fips
      modroot: cmd/acmesolver
      packages: main.go
      output: acmesolver-linux-${{build.goarch}}
      ldflags: -X github.com/cert-manager/cert-manager/pkg/util.AppVersion=$(git describe --tags --always --match='v*' --abbrev=14 --dirty) -X github.com/cert-manager/cert-manager/pkg/util.AppGitCommit=$(git rev-parse HEAD)

  - uses: go/build
    with:
      go-package: go-fips
      modroot: cmd/cainjector
      packages: main.go
      output: cainjector-linux-${{build.goarch}}
      ldflags: -X github.com/cert-manager/cert-manager/pkg/util.AppVersion=$(git describe --tags --always --match='v*' --abbrev=14 --dirty) -X github.com/cert-manager/cert-manager/pkg/util.AppGitCommit=$(git rev-parse HEAD)

  - uses: go/build
    with:
      go-package: go-fips
      modroot: cmd/webhook
      packages: main.go
      output: webhook-linux-${{build.goarch}}
      ldflags: -X github.com/cert-manager/cert-manager/pkg/util.AppVersion=$(git describe --tags --always --match='v*' --abbrev=14 --dirty) -X github.com/cert-manager/cert-manager/pkg/util.AppGitCommit=$(git rev-parse HEAD)

subpackages:
  - name: cert-manager-controller-fips-${{vars.major-minor-version}}
    pipeline:
      - runs: |
          install -Dm755 ${{targets.destdir}}/usr/bin/controller-linux-$(go env GOARCH) ${{targets.subpkgdir}}/usr/bin/controller
    dependencies:
      provides:
        - cert-manager-controller-fips=${{package.full-version}}

  - name: cert-manager-webhook-fips-${{vars.major-minor-version}}
    pipeline:
      - runs: |
          install -Dm755 ${{targets.destdir}}/usr/bin/webhook-linux-$(go env GOARCH) ${{targets.subpkgdir}}/usr/bin/webhook
    dependencies:
      provides:
        - cert-manager-webhook-fips=${{package.full-version}}

  - name: cert-manager-cainjector-fips-${{vars.major-minor-version}}
    pipeline:
      - runs: |
          install -Dm755 ${{targets.destdir}}/usr/bin/cainjector-linux-$(go env GOARCH) ${{targets.subpkgdir}}/usr/bin/cainjector
    dependencies:
      provides:
        - cert-manager-cainjector-fips=${{package.full-version}}

  - name: cert-manager-acmesolver-fips-${{vars.major-minor-version}}
    pipeline:
      - runs: |
          install -Dm755 ${{targets.destdir}}/usr/bin/acmesolver-linux-$(go env GOARCH) ${{targets.subpkgdir}}/usr/bin/acmesolver
    dependencies:
      provides:
        - cert-manager-acmesolver-fips=${{package.full-version}}

  - name: cmctl-fips-${{vars.major-minor-version}}
    dependencies:
      provides:
        - cmctl-fips=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          go-package: go-fips
          modroot: cmd/ctl
          packages: main.go
          output: cmctl
          ldflags: -X github.com/cert-manager/cert-manager/pkg/util.AppVersion=$(git describe --tags --always --match='v*' --abbrev=14 --dirty) -X github.com/cert-manager/cert-manager/pkg/util.AppGitCommit=$(git rev-parse HEAD)
    test:
      environment:
        contents:
          packages:
            - go-fips
            - wolfi-base
      pipeline:
        - uses: test/go-fips-check
          with:
            package-match: cmctl
        - runs: |
            cmctl -h
            cmctl --help

update:
  enabled: true
  github:
    identifier: cert-manager/cert-manager
    strip-prefix: v
    tag-filter: v1.12.
    use-tag: true

test:
  environment:
    contents:
      packages:
        - go-fips
  pipeline:
    - uses: test/go-fips-check
    - runs: |
        acmesolver-linux-$(go env GOARCH) -h
        cainjector-linux-$(go env GOARCH) -h
        controller-linux-$(go env GOARCH) -h
        webhook-linux-$(go env GOARCH) -h
