package:
  name: openjdk-17-bcfips
  version: 17.0.13
  epoch: 0
  description: FIPS version of the OpenJDK package using BouncyCastle crypto APIs
  copyright:
    - license: GPL-2.0-only
    - license: MIT # BouncyCastle is licensed under the BouncyCastle License but their license state it is to be read as MIT: https://www.bouncycastle.org/license.html
  dependencies:
    runtime:
      - openjdk-17-jre-base-bcfips~${{package.version}} # lock to the public GA version
      - openjdk-17-jre-bcfips~${{package.version}} # lock to the public GA version
      - openjdk-17-bcfips~${{package.version}} # lock to the public GA version
      - openjdk-17-default-jvm-bcfips~${{package.version}} # lock to the public GA version
      - bouncycastle-fips-1.0
    provides:
      - jdk-fips=${{package.full-version}}

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+).*
    replace: $1
    to: major-version

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - build-base
      - automake
      - autoconf
      - file
      - freetype-dev
      - cups-dev
      - libx11-dev
      - libxext-dev
      - libxrender-dev
      - libxrandr-dev
      - libxtst-dev
      - libxt-dev
      - alsa-lib-dev
      - libffi-dev
      - bash
      - zip
      - fontconfig-dev
      - libxi-dev
      - libjpeg-turbo-dev
      - giflib-dev
      - lcms2-dev
      - openjdk-16-default-jdk
      - bouncycastle-fips-1.0 # used only for testing purposes, the real dependency is the runtime dependency

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/openjdk/jdk17u.git
      tag: jdk-${{package.version}}-ga
      expected-commit: eed263c8077e066a32d746fd188f2dee8c47b9ab

  - working-directory: /home/build/googletest
    pipeline:
      - uses: fetch
        with:
          uri: https://github.com/google/googletest/archive/refs/tags/v1.13.0.tar.gz
          expected-sha512: 70c0cfb1b4147bdecb467ecb22ae5b5529eec0abc085763213a796b7cdbd81d1761d12b342060539b936fa54f345d33f060601544874d6213fdde79111fa813e

  - uses: patch
    with:
      patches: FixNullPtrCast.patch

  - runs: chmod +x configure

  - uses: autoconf/configure
    with:
      opts: |
        --with-boot-jdk=/usr/lib/jvm/java-16-openjdk \
        --prefix=/usr/lib/jvm/java-17-openjdk \
        --with-vendor-name=wolfi \
        --with-vendor-url=https://wolfi.dev \
        --with-vendor-bug-url=https://github.com/wolfi-dev/os/issues \
        --with-version-opt="wolfi-r${{package.epoch}}" \
        --disable-warnings-as-errors \
        --disable-precompiled-headers \
        --enable-dtrace=no \
        --with-zlib=system \
        --with-debug-level=release \
        --with-native-debug-symbols=internal \
        --with-jvm-variants=server \
        --with-jtreg=no  \
        --with-libpng=system \
        --with-jvm-variants=server \
        --with-libjpeg=system \
        --with-giflib=system \
        --with-lcms=system \
        --with-gtest="/home/build/googletest" \
        --with-version-string=""

  - runs: make jdk-image

  # Check we built something valid
  - runs: |
      _java_bin="./build/*-server-release/images/jdk/bin"

      $_java_bin/javac -d . HelloWorld.java
      $_java_bin/java HelloWorld

      # NOTE: Disable flakey tests for now as we're seeing builds hang on aarch64
      # # run the gtest unittest suites
      # make test-hotspot-gtest

  - runs: |
      _java_home="usr/lib/jvm/java-17-openjdk"

      mkdir -p "${{targets.destdir}}"/$_java_home
      cp -r build/*-server-release/images/jdk/* "${{targets.destdir}}"/$_java_home
      rm "${{targets.destdir}}"/$_java_home/lib/src.zip

  - name: Create the FIPS configuration
    runs: |
      _java_home="usr/lib/jvm/java-${{vars.major-version}}-openjdk"

      cp java.security "${{targets.destdir}}/$_java_home/conf/security"

      mkdir -p "${{targets.destdir}}/usr/lib/jvm/jdk-fips-config"
      cp java.policy "${{targets.destdir}}/usr/lib/jvm/jdk-fips-config"

  - name: Test the overall setup
    runs: |
      _java_home="usr/lib/jvm/java-${{vars.major-version}}-openjdk"
      JAVA_HOME="$_java_home" DESTDIR="${{targets.destdir}}" VERSION="${{vars.major-version}}" ./test.sh

subpackages:
  - name: "openjdk-17-dbg-bcfips"
    description: "OpenJDK 17 Java Debug Symbols"
    pipeline:
      - uses: split/debug
    dependencies:
      runtime:
        - openjdk-17-bcfips

  - name: "openjdk-17-jre-bcfips"
    description: "OpenJDK 17 Java Runtime Environment"
    dependencies:
      runtime:
        - freetype
        - libfontconfig1
        - openjdk-17-jre-base-bcfips
      provides:
        - jre-fips=${{package.full-version}}
    pipeline:
      - runs: |
          _java_home="usr/lib/jvm/java-17-openjdk"

          mkdir -p "${{targets.subpkgdir}}"/$_java_home/lib
          mv "${{targets.destdir}}"/$_java_home/lib/libawt_xawt.so \
              "${{targets.destdir}}"/$_java_home/lib/libfontmanager.so \
              "${{targets.destdir}}"/$_java_home/lib/libjavajpeg.so \
              "${{targets.destdir}}"/$_java_home/lib/libjawt.so \
              "${{targets.destdir}}"/$_java_home/lib/libjsound.so \
              "${{targets.destdir}}"/$_java_home/lib/liblcms.so \
              "${{targets.destdir}}"/$_java_home/lib/libsplashscreen.so \
              "${{targets.subpkgdir}}"/$_java_home/lib

  - name: "openjdk-17-jre-base-bcfips"
    description: "OpenJDK 17 Java Runtime Environment (headless)"
    dependencies:
      runtime:
        - java-common
        - java-cacerts
        - bouncycastle-fips-1.0
    pipeline:
      - runs: |
          _java_home="usr/lib/jvm/java-17-openjdk"

          mkdir -p "${{targets.subpkgdir}}"/$_java_home
          mv "${{targets.destdir}}"/$_java_home/lib \
             "${{targets.subpkgdir}}"/$_java_home

          mkdir -p "${{targets.subpkgdir}}"/$_java_home/bin
          for i in java \
                    jfr \
                    jrunscript \
                    keytool \
                    rmiregistry; do
            mv "${{targets.destdir}}"/$_java_home/bin/$i "${{targets.subpkgdir}}"/$_java_home/bin/$i
          done

          mv "${{targets.destdir}}"/$_java_home/legal "${{targets.subpkgdir}}"/$_java_home
          mv "${{targets.destdir}}"/$_java_home/conf "${{targets.subpkgdir}}"/$_java_home
          mv "${{targets.destdir}}"/$_java_home/release "${{targets.subpkgdir}}"/$_java_home
          cp ASSEMBLY_EXCEPTION \
              LICENSE \
              README.md \
             "${{targets.subpkgdir}}"/$_java_home

          # symlink to shared java cacerts store
          rm -f "${{targets.subpkgdir}}"/$_java_home/lib/security/cacerts
          ln -sf /etc/ssl/certs/java/cacerts \
            "${{targets.subpkgdir}}"/$_java_home/lib/security/cacerts

          # symlink for `java-common` to work (which expects jre in $_java_home/jre)
          ln -sf . "${{targets.subpkgdir}}/$_java_home/jre"

          mkdir -p "${{targets.subpkgdir}}/usr/lib/jvm/jdk-fips-config"
          cp java.policy "${{targets.subpkgdir}}/usr/lib/jvm/jdk-fips-config"

  - name: "openjdk-17-jmods-bcfips"
    description: "OpenJDK 17 jmods"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib/jvm/java-17-openjdk
          mv "${{targets.destdir}}"/usr/lib/jvm/java-17-openjdk/jmods \
             "${{targets.subpkgdir}}"/usr/lib/jvm/java-17-openjdk

  - name: "openjdk-17-doc-bcfips"
    description: "OpenJDK 17 Documentation"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib/jvm/java-17-openjdk
          mv "${{targets.destdir}}"/usr/lib/jvm/java-17-openjdk/man \
             "${{targets.subpkgdir}}"/usr/lib/jvm/java-17-openjdk

  - name: "openjdk-17-demos-bcfips"
    description: "OpenJDK 17 Demos"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib/jvm/java-17-openjdk
          mv "${{targets.destdir}}"/usr/lib/jvm/java-17-openjdk/demo \
             "${{targets.subpkgdir}}"/usr/lib/jvm/java-17-openjdk

  - name: "openjdk-17-default-jvm-bcfips"
    description: "Use the openjdk-17-bcfips JVM as the default JVM"
    dependencies:
      runtime:
        - openjdk-17-jre-bcfips
      provides:
        - default-jvm-fips=1.17
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib/jvm
          ln -sf java-17-openjdk "${{targets.subpkgdir}}"/usr/lib/jvm/default-jvm

  - name: "openjdk-17-default-jdk-bcfips"
    description: "Use the openjdk-17-bcfips JVM as the default JVM with the JDK installed"
    dependencies:
      runtime:
        - openjdk-17-default-jvm-bcfips
        - openjdk-17-bcfips
      provides:
        - default-jdk-fips=1.17

  # Creates an alternative java.secuity file with additional SUN providers
  # enabled. These are not FIPS complaint providers, but some Java applications
  # will not function without them. This is the exception, and any applications
  # leveraging this must not be advertised as fully FIPS compliant.
  - name: "openjdk-17-bcfips-additional-sun-providers"
    description: "Enable additional SUN providers in java.security."
    dependencies:
      runtime:
        - openjdk-17-bcfips
      replaces:
        - openjdk-17-bcfips
    pipeline:
      - runs: |
          _java_home="usr/lib/jvm/java-${{vars.major-version}}-openjdk"

          mkdir -p "${{targets.subpkgdir}}"/$_java_home/conf/security
          cp -f additional-sun-providers-java.security "${{targets.subpkgdir}}/$_java_home/conf/security/java.security"

  - name: "openjdk-17-jre-bcfips-additional-sun-providers"
    description: "Enable additional SUN providers in java.security."
    dependencies:
      runtime:
        - openjdk-17-jre-bcfips
      replaces:
        - openjdk-17-jre-bcfips
    pipeline:
      - runs: |
          _java_home="usr/lib/jvm/java-${{vars.major-version}}-openjdk"

          mkdir -p "${{targets.subpkgdir}}"/$_java_home/conf/security
          cp -f additional-sun-providers-java.security "${{targets.subpkgdir}}/$_java_home/conf/security/java.security"

# OpenJDK versions use an interesting versioning approach.  You can read the Timeline section https://wiki.openjdk.org/display/JDKUpdates/JDK17u
# The OpenJDK repo uses tags for prereleases and GA releases https://github.com/openjdk/jdk17u/tags
# 1. Pre-releases are tagged with a tag like jdk-17.0.10+1
# 2. GA releases are tagged with a tag like jdk-17.0.10-ga
# 3. Patch releases are tagged with a tag like jdk-17.0.10+2
# 4. The jdk-17.0.10-ga tag is updated to point to the new patch release commit
update:
  enabled: true
  shared: true
  github:
    identifier: openjdk/jdk17u
    strip-prefix: jdk-
    strip-suffix: -ga
    tag-filter-contains: -ga
    use-tag: true
