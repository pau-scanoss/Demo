package:
  name: py3.8-pytorch-cuda-11.8
  version: 2.3.1
  epoch: 0
  description: Tensors and Dynamic neural networks in Python with strong GPU acceleration
  copyright:
    - license: BSD-3-Clause
  target-architecture:
    - x86_64
  resources:
    cpu: 64
    memory: 192Gi
  options:
    no-depends: true
  dependencies:
    runtime:
      # For some reason this isn't detected
      - libgomp
      - openmp-17-dev
      - cuda-toolkit-11.8
      - nvidia-nccl-cuda-11.8
      - py3.8-numpy-1.24
      - py3.8-pyyaml
      - py3.8-typing-extensions

vars:
  cudnn-version: 8

environment:
  contents:
    packages:
      - patchelf
      - gcc-11-default
      - build-base
      - bash
      - busybox
      - ca-certificates-bundle
      - cmake
      - isl-dev
      - py3.8-build
      - py3.8-installer
      - py3.8-numpy-1.24
      - py3.8-pip
      - py3.8-pyyaml
      - py3.8-setuptools
      - py3.8-typing-extensions
      - py3.8-wheel
      - python-3.8
      - python-3.8-dev
      - samurai
      - libffi-dev
      - libjpeg-dev
      - libpng-dev
      - libjpeg-turbo-dev
      - mpc-dev
      - openmp-17-dev
      - posix-libc-utils
      - openssl-dev
      - git
      - coreutils
      - libgomp
      # Cuda
      - nvidia-driver
      - nvidia-cuda-cccl-11.8
      - nvidia-cuda-profiler-api-11.8
      - nvidia-cudnn-${{vars.cudnn-version}}-cuda-11-dev
      - nvidia-nccl-cuda-11.8
      - cuda-toolkit-11.8-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/pytorch/pytorch.git
      tag: v${{package.version}}
      expected-commit: 63d5e9221bedd1546b7d364b5ce4171547db12a9
      recurse-submodules: true

  - uses: patch
    with:
      patches: cstdint.patch

  - name: Python Build
    runs: |
      export PYTORCH_BUILD_VERSION="${{package.version}}+cu118"
      export PYTORCH_BUILD_NUMBER=0
      export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda-11.8/lib:/usr/local/cudnn-${{vars.cudnn-version}}"
      export PATH="$PATH:/usr/local/cuda-11.8/bin"
      export CMAKE_CUDA_ARCHITECTURES=all
      export USE_CUDA=1
      export USE_CUDNN=1
      export USE_SYSTEM_NCCL=1
      export NCCL_LIB_DIR=/usr/lib
      export NCCL_INCLUDE_DIR=/usr/include
      export CUDNN_HOME="/usr/local/cudnn-${{vars.cudnn-version}}"
      export CUDNN_LIBRARY="/usr/local/cudnn-${{vars.cudnn-version}}/lib64"
      export CUDNN_INCLUDE_DIR="/usr/local/cudnn-${{vars.cudnn-version}}/include"
      export TORCH_CUDA_ARCH_LIST="5.2 6.0 6.1 7.0+PTX 8.0 8.6 8.7 ${{vars.cudnn-version}} 9.0"
      export TORCH_NVCC_FLAGS="-Xfatbin -compress-all"
      export CUDA_VERSION="11.8"
      export MAX_JOBS="$(nproc --ignore=2)"

      # see pytorch doc on GLIBCXX_USE_CXX11_ABI at
      # https://github.com/pytorch/pytorch/blob/b4b1480b0634a5fb7e116053464301d192e2583a/README.md?plain=1#L236
      # and https://gcc.gnu.org/onlinedocs/libstdc++/manual/using_dual_abi.html
      export _GLIBCXX_USE_CXX11_ABI=1

      # Disable some warnings
      export CFLAGS="$CFLAGS -Wno-error=nonnull -Wno-nonnull"
      export CXXFLAGS="$CXXFLAGS -Wno-error=nonnull -Wno-nonnull"

      python3.8 -m pip install -r requirements.txt
      python3.8 -m build

  - runs: |
      # Setup the virtualenv
      python3.8 -m venv .venv --system-site-packages
      .venv/bin/pip install --no-compile -r requirements.txt

      # Remediate  CVE-2024-6345 and CVE-2022-40897
      .venv/bin/pip install --upgrade setuptools>=70.0.0

      .venv/bin/pip install --no-compile dist/*.whl
      .venv/bin/pip install --no-compile typing-extensions
      .venv/bin/pip install --upgrade pip

  - runs: |
      mkdir -p ${{targets.destdir}}/usr/share/pytorch
      mv .venv ${{targets.destdir}}/usr/share/pytorch/

      # edit the venv paths
      sed -i "s|/home/build|/usr/share/pytorch|g" ${{targets.destdir}}/usr/share/pytorch/.venv/bin/*

      # allow site-packages
      sed -i "s|include-system-site-packages = false|include-system-site-packages = true|g" ${{targets.destdir}}/usr/share/pytorch/.venv/pyvenv.cfg

subpackages:
  - name: py3.8-wheels-torch-cuda-11.8
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/share/wheels
          cp dist/*.whl ${{targets.contextdir}}/usr/share/wheels

update:
  enabled: true
  github:
    identifier: pytorch/pytorch
    strip-prefix: v
    tag-filter: v2.3.

test:
  pipeline:
    - runs: |
        export PATH=/usr/share/pytorch/.venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

        python3 -c "import torch"
