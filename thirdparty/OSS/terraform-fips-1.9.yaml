package:
  name: terraform-fips-1.9
  version: 1.9.8
  epoch: 3
  copyright:
    - license: BUSL-1.1
  dependencies:
    provides:
      - terraform-fips=${{package.full-version}}

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/hashicorp/terraform
      tag: v${{package.version}}
      expected-commit: e044e569c5bc81f82e9a4d7891f37c6fbb0a8a10

  - uses: go/bump
    with:
      deps: github.com/golang-jwt/jwt/v4@v4.5.1 golang.org/x/crypto@v0.31.0 golang.org/x/net@v0.33.0

  - uses: go/build
    with:
      packages: .
      go-package: go-fips
      output: terraform
      ldflags: -X github.com/hashicorp/terraform/version.dev="no"

subpackages:
  - name: ${{package.name}}-compat
    description: Compat package for terraform
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/local/bin
          ln -s /usr/bin/terraform "${{targets.subpkgdir}}"/usr/local/bin

  - name: ${{package.name}}-local-provider-config
    description: Configure Terraform to use local providers
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/terraform/provider-mirror
          cat > "${{targets.subpkgdir}}"/terraform/.terraformrc <<EOF
          provider_installation {
            filesystem_mirror {
              path    = "/terraform/provider-mirror"
              include = ["*/*"]
            }
            direct {
              exclude = ["*/*"]
            }
          }
          EOF

update:
  enabled: true
  github:
    identifier: hashicorp/terraform
    strip-prefix: v
    tag-filter: v1.9

test:
  pipeline:
    - uses: test/go-fips-check
    - name: Terraform Initialization
      runs: |
        echo "provider \"local\" {}" > example.tf
        terraform init -input=false || exit 1
        terraform --version
        terraform --help
    - name: Terraform Plan Creation
      runs: |
        terraform plan -input=false -out=tfplan || exit 1
    - name: Terraform Apply Execution
      runs: |
        terraform apply -input=false tfplan || exit 1
