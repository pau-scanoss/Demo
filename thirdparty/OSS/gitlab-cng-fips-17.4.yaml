# These variables track the tag and expected commit for GitLab components that
# require manual intervention for updates. Please refer to the variables
# manifest that aligns with the CNG release tag set in the CNG package version
# below. The manifest can be found here:
# - https://gitlab.com/gitlab-org/build/CNG/-/blob/v<PACKAGE VERSION HERE>/ci_files/variables.yml
# Additionally, the latest 'gitaly-backup-fips' package (part of gitlab-cng), must be built first.
vars:
  # Container registry tags: https://gitlab.com/gitlab-org/container-registry/-/tags
  registry-commit: 40a0e35e6756881c8387be33b6ad2f5d9e3f013e
  registry-tag: 4.7.0
  # ElasticSearch indexer tags: https://gitlab.com/gitlab-org/gitlab-elasticsearch-indexer/-/tags
  indexer-commit: 14b00006696474cc3a0e42c43f1cf8b1bd63914c
  indexer-tag: 5.2.0
  # Logger tags: https://gitlab.com/gitlab-org/cloud-native/gitlab-logger/-/tags
  logger-commit: 61e76054e898803f7c2408e7e54dfba96a5085fc
  logger-tag: 3.0.0
  # Shell tags: https://gitlab.com/gitlab-org/gitlab-shell/-/tags
  shell-commit: 2ff6909d8c43a78f34b698a863e554a7bc301545
  shell-tag: 14.39.0

package:
  name: gitlab-cng-fips-17.4
  version: 17.4.5
  epoch: 3
  description: Cloud Native container images per component of GitLab
  copyright:
    - license: MIT
  dependencies:
    provides:
      - gitlab-cng-fips=${{package.full-version}}
    runtime:
      - openssl-config-fipshardened

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+\.\d+)\.\d+$
    replace: "$1"
    to: major-minor-version

environment:
  contents:
    packages:
      - busybox
      - ca-certificates
      - go-fips
      - heimdal-dev
      - icu-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://gitlab.com/gitlab-org/build/CNG.git
      tag: v${{package.version}}
      expected-commit: 89e2674ac5c17f9344597fbda7a37e46b96faa7b

subpackages:
  - name: gitlab-base-fips-${{vars.major-minor-version}}
    pipeline:
      - runs: |
          cd ./gitlab-base
          for x in $(find scripts/ -type f); do
            mkdir -p ${{targets.subpkgdir}}/$(dirname $x)
            cp -r $x ${{targets.subpkgdir}}/$x
          done
    dependencies:
      provides:
        - gitlab-base-fips=${{package.full-version}}
      runtime:
        - bash
        - busybox
        - ca-certificates-bundle
        - curl
        - gitlab-logger-fips-${{vars.major-minor-version}}
        - gomplate-fips
        - openssl-config-fipshardened
        - procps
        - xtail
        - tini
        - tini-compat

  - name: gitlab-container-registry-fips-${{vars.major-minor-version}}
    description: The GitLab Container Registry originated as a fork of the Docker Distribution Registry, now CNCF Distribution, both distributed under Apache License Version 2.0.
    dependencies:
      provides:
        - gitlab-container-registry-fips=${{package.full-version}}
    pipeline:
      - uses: git-checkout
        with:
          repository: https://gitlab.com/gitlab-org/container-registry
          tag: v${{vars.registry-tag}}-gitlab
          expected-commit: ${{vars.registry-commit}}
          destination: ./container-registry
      - working-directory: ./container-registry
        runs: |
          mkdir -p "${{targets.contextdir}}"/etc/docker/registry
      - uses: go/bump
        with:
          deps: github.com/golang-jwt/jwt/v4@v4.5.1 golang.org/x/crypto@v0.31.0 golang.org/x/net@v0.33.0
          modroot: ./container-registry
      - uses: go/build
        with:
          packages: ./cmd/registry
          output: registry
          tags: include_oss,include_gcs,continuous_profiler_stackdriver
          ldflags: -X github.com/docker/distribution/version.Version=${{vars.registry-tag}} -X github.com/docker/distribution/version.Revision=$(git rev-parse HEAD || echo '<unknown>') -X github.com/docker/distribution/version.Package="github.com/docker/distribution" -X github.com/docker/distribution/version.BuildTime=$(date +%F-%T)
          modroot: ./container-registry
          go-package: go-fips-md5
    test:
      environment:
        contents:
          packages:
            - crane
      pipeline:
        - uses: test/go-fips-check
          with:
            package-match: gitlab-container-registry-fips-${{vars.major-minor-version}}
        - runs: |
            #!/bin/bash

            # Create the configuration file
            tee /etc/docker/registry/config.yml <<EOL
            # This config file is a basic configuration using filesystem metadata and blob
            # storage.
            version: 0.1
            log:
              accesslog:
                disabled: false
                formatter: text
              level: info
              formatter: text
              fields:
                service: registry
            storage:
              delete:
                enabled: true
              filesystem:
                # Temp dir, rename if you need persistence.
                # registry/storage/paths.go describes the structure of the data
                # written to this directory
                rootdirectory: "/tmp/registry"
            http:
              # Registry API will be accessible at localhost:5000
              addr: :5000
              debug:
                addr: :5001
                prometheus:
                  enabled: true
                  path: /metrics
                pprof:
                  enabled: true
            EOL

            # Run the Docker registry with the configuration file
            registry serve /etc/docker/registry/config.yml &
            PID=$!

            # Wait for the registry to start
            sleep 5

            # Test the registry
            crane catalog localhost:5000

            # copy the image to the registry
            crane copy cgr.dev/chainguard/busybox:latest localhost:5000/busybox:latest

            # check for the image in the registry
            crane manifest localhost:5000/busybox:latest

            # Stop the registry
            kill $PID

  - name: gitlab-elasticsearch-indexer-fips-${{vars.major-minor-version}}
    description: Elasticsearch indexer for GitLab EE, written in Go
    dependencies:
      provides:
        - gitlab-elasticsearch-indexer-fips=${{package.full-version}}
    pipeline:
      - uses: git-checkout
        with:
          repository: https://gitlab.com/gitlab-org/gitlab-elasticsearch-indexer
          tag: v${{vars.indexer-tag}}
          expected-commit: ${{vars.indexer-commit}}
          destination: ./elasticsearch-indexer
      - uses: go/bump
        with:
          deps: golang.org/x/crypto@v0.31.0 golang.org/x/net@v0.33.0
          modroot: ./elasticsearch-indexer
      - uses: go/build
        with:
          packages: .
          output: gitlab-elasticsearch-indexer
          modroot: ./elasticsearch-indexer
          go-package: go-fips
    test:
      pipeline:
        - uses: test/go-fips-check
          with:
            package-match: gitlab-elasticsearch-indexer-fips-${{vars.major-minor-version}}
        - runs: |
            gitlab-elasticsearch-indexer --version
            gitlab-elasticsearch-indexer --help

  - name: gitlab-logger-fips-${{vars.major-minor-version}}
    description: GitLab Logger provides a means of wrapping non-structured log files within structure JSON.
    dependencies:
      provides:
        - gitlab-logger-fips=${{package.full-version}}
    pipeline:
      - uses: git-checkout
        with:
          repository: https://gitlab.com/gitlab-org/cloud-native/gitlab-logger
          tag: v${{vars.logger-tag}}
          destination: ./logger
      - uses: go/build
        with:
          packages: ./cmd/gitlab-logger
          output: gitlab-logger
          ldflags: -X main.version=${component_version} -X main.buildtime=$(date +%F-%T)
          modroot: ./logger
          go-package: go-fips
    test:
      pipeline:
        - uses: test/go-fips-check
          with:
            package-match: gitlab-logger-fips-${{vars.major-minor-version}}
        - runs: |
            gitlab-logger -h

  - name: gitlab-shell-fips-${{vars.major-minor-version}}
    description: SSH access for GitLab
    dependencies:
      provides:
        - gitlab-shell-fips=${{package.full-version}}
      runtime:
        - openssh
        - openssl-config-fipshardened
    pipeline:
      - uses: git-checkout
        with:
          repository: https://gitlab.com/gitlab-org/gitlab-shell
          tag: v${{vars.shell-tag}}
          expected-commit: ${{vars.shell-commit}}
          destination: ./shell
      - uses: go/bump
        with:
          deps: golang.org/x/crypto@v0.31.0 golang.org/x/net@v0.33.0
          modroot: ./shell
      - working-directory: ./shell
        runs: |
          make build

          BINDIR=${{targets.contextdir}}/srv/gitlab-shell/bin
          mkdir -p "${BINDIR}"

          install -m755 bin/gitlab-shell-check "${BINDIR}/gitlab-shell-check"
          install -m755 bin/gitlab-shell "${BINDIR}/gitlab-shell"
          install -m755 bin/gitlab-shell-authorized-keys-check "${BINDIR}/gitlab-shell-authorized-keys-check"
          install -m755 bin/gitlab-shell-authorized-principals-check "${BINDIR}/gitlab-shell-authorized-principals-check"
          install -m755 bin/gitlab-sshd "${BINDIR}/gitlab-sshd"

          mkdir -p ${{targets.contextdir}}/srv/gitlab-shell/
          cp LICENSE VERSION ${{targets.contextdir}}/srv/gitlab-shell/

          install -d ${{targets.contextdir}}/srv/sshd
          install -d ${{targets.contextdir}}/etc/ssh
          install -d ${{targets.contextdir}}/var/log/gitlab-shell
          touch ${{targets.contextdir}}/var/log/gitlab-shell/gitlab-shell.log
    test:
      pipeline:
        - uses: test/go-fips-check
          with:
            package-match: gitlab-shell-fips-${{vars.major-minor-version}}

  - name: gitlab-toolbox-fips-${{vars.major-minor-version}}
    dependencies:
      provides:
        - gitlab-toolbox-fips=${{package.full-version}}
      runtime:
        - azcopy-fips
        - git
        - gitaly-backup-fips-${{vars.major-minor-version}}
        - openssl-config-fipshardened
        - postgresql-client
        # Anything > 3.11 currently breaks gsutil
        - py3.11-aws-cli-1
        - py3.11-google-cloud-sdk
        - py3.11-s3cmd
        - redis-benchmark
        - redis-cli

update:
  enabled: true
  # Requires manual steps when updating
  manual: true
  git:
    strip-prefix: v
    tag-filter-prefix: v17.4
  # FIPS tags are intentionally ignored. These are separate branches upstream
  # cuts to build FIPS based UBI images. They don't contain any other differences.
  ignore-regex-patterns:
    - "fips"
    - "-rc"
    - "-rc"
    - "-ubi8"
    - "-ee"
