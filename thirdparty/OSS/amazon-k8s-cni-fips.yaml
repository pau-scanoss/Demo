package:
  name: amazon-k8s-cni-fips
  version: 1.19.2
  epoch: 0
  description: Networking plugin repository for pod networking in Kubernetes using Elastic Network Interfaces on AWS
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - iptables

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - cni-plugins-fips
      - curl
      - go-fips
      - oldglibc
  environment:
    CGO_CFLAGS: "-I/usr/lib/oldglibc/include"
    CGO_LDFLAGS: "-L/usr/lib/oldglibc/lib"

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/aws/amazon-vpc-cni-k8s
      tag: v${{package.version}}
      expected-commit: 847372a017457306cf7d14c65094c1cdc70f8971

  - name: Copy conflist
    runs: |
      mkdir -p ${{targets.destdir}}/app
      cp -r misc/10-aws.conflist ${{targets.destdir}}/app

  - uses: go/bump
    with:
      deps: golang.org/x/net@v0.33.0

  - uses: go/build
    with:
      go-package: go-fips
      ldflags: -X pkg/version/info.Version=${{package.version}} -X pkg/awsutils/awssession.version=${{package.version}}
      output: aws-cni
      packages: ./cmd/routed-eni-cni-plugin

  - uses: go/build
    with:
      go-package: go-fips
      ldflags: -X pkg/version/info.Version=${{package.version}} -X pkg/awsutils/awssession.version=${{package.version}}
      output: aws-k8s-agent
      packages: ./cmd/aws-k8s-agent

  - uses: go/build
    with:
      go-package: go-fips
      ldflags: -X pkg/version/info.Version=${{package.version}} -X pkg/awsutils/awssession.version=${{package.version}}
      output: aws-vpc-cni
      packages: ./cmd/aws-vpc-cni

  - uses: go/build
    with:
      go-package: go-fips
      ldflags: -X pkg/version/info.Version=${{package.version}} -X pkg/awsutils/awssession.version=${{package.version}}
      output: egress-cni
      packages: ./cmd/egress-cni-plugin

  - uses: go/build
    with:
      go-package: go-fips
      ldflags: -X pkg/version/info.Version=${{package.version}} -X pkg/awsutils/awssession.version=${{package.version}}
      output: grpc-health-probe
      packages: ./cmd/grpc-health-probe

subpackages:
  - name: "amazon-k8s-cni-init-fips"
    description: "init package for amazon-k8s-cni-fips"
    pipeline:
      - uses: go/build
        with:
          go-package: go-fips
          ldflags: -X pkg/version/info.Version=${{package.version}} -X pkg/awsutils/awssession.version=${{package.version}}
          output: aws-vpc-cni-init
          packages: ./cmd/aws-vpc-cni-init

  - name: "amazon-k8s-cni-init-fips-compat"
    description: "Compatibility package to place binaries in the location expected by upstream helm charts"
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/init
          ln -sf /usr/bin/aws-vpc-cni-init ${{targets.subpkgdir}}/init/aws-vpc-cni-init
          # Copying FIPS compliant container networking plugins
          binaries="bandwidth bridge dhcp dummy firewall host-device host-local ipvlan loopback macvlan portmap ptp sbr static tap tuning vlan vrf"
          for bin in $binaries; do
            cp /usr/bin/$bin ${{targets.subpkgdir}}/init/$bin
          done
          # Download the debug script from awslabs/amazon-eks-ami
          curl -L https://raw.githubusercontent.com/awslabs/amazon-eks-ami/master/log-collector-script/linux/eks-log-collector.sh -o ${{targets.subpkgdir}}/init/aws-cni-support.sh

update:
  enabled: true
  github:
    identifier: aws/amazon-vpc-cni-k8s
    strip-prefix: v
    use-tag: true

test:
  environment:
    contents:
      packages:
        - amazon-k8s-cni-compat
        - amazon-k8s-cni-init-fips
        - amazon-k8s-cni-init-fips-compat
  pipeline:
    - uses: test/go-fips-check
    - runs: |
        aws-cni --version
        aws-cni --help
        egress-cni --version
        egress-cni --help
        grpc-health-probe --help
    - name: Verify installation
      runs: |
        aws-cni 2>&1 | grep -q 'CNI protocol versions supported: 0.1.0, 0.2.0, 0.3.0, 0.3.1, 0.4.0, 1.0.0, 1.1.0'
        aws-vpc-cni 2>&1 | grep -q 'Failed to install CNI binaries" error="Failed to install /host/opt/cni/bin/aws-cni: failed to copy file: stat aws-cni: no such file or directory'
        egress-cni 2>&1 | grep -q 'CNI protocol versions supported: 0.1.0, 0.2.0, 0.3.0, 0.3.1, 0.4.0, 1.0.0, 1.1.0'
        grpc-health-probe 2>&1 | grep -q '"caller":"github.com/aws/amazon-vpc-cni-k8s/cmd/grpc-health-probe/main.go:59","msg":"error: --addr not specified"'
    - name: Verify aws-vpc-cni-init
      runs: |
        cd /init
        HOST_CNI_BIN_PATH="/tmp" aws-vpc-cni-init 2>&1 | grep -q 'Copied all CNI plugin binaries to /tmp'
        if [ -z "$(ls -A /tmp)" ]; then
          echo "/tmp should have been populated with CNI plugin binaries."
          exit 1
        fi
