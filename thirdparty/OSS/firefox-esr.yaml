package:
  name: firefox-esr
  version: 128.6.0
  epoch: 0
  description: Firefox web browser - Extended Support Release
  copyright:
    - license: GPL-3.0-only AND LGPL-2.1-only AND LGPL-3.0-only AND MPL-2.0
  dependencies:
    runtime:
      - mesa
      - mesa-glx
      - pciutils-libs

vars:
  llvm-vers: 19

environment:
  contents:
    packages:
      - alsa-lib
      - alsa-lib-dev
      - bash
      - build-base
      - busybox
      - cairo-dev
      - cbindgen
      - clang-${{vars.llvm-vers}}
      - clang-${{vars.llvm-vers}}-dev
      - dbus-dev
      - dbus-glib-dev
      - dbus-libs
      - expat-dev
      - fribidi-dev
      - glib-dev
      - gnutar
      - gtk-3
      - gtk-3-dev
      - harfbuzz-dev
      - libice-dev
      - libnotify-dev
      - libsm-dev
      - libxcomposite-dev
      - libxcursor-dev
      - libxdamage-dev
      - libxfixes-dev
      - libxft-dev
      - libxi-dev
      - libxrandr-dev
      - libxrender-dev
      - libxtst-dev
      - llvm-${{vars.llvm-vers}}
      - llvm-lld-${{vars.llvm-vers}}
      - m4
      - py3.11-mercurial
      - nasm
      - nodejs
      - pango-dev
      - patch
      - pulseaudio-dev
      - py3.11-pip # Matches Mach's recommended maximum Python version
      - python-3.11-dev # (3.12 definitely didn't work at the time of setting this)
      - rust-1.77
      - wasi-sdk-libclang-rt-builtins
      - wasi-sdk-sysroot
      - wget

var-transforms:
  - from: ${{package.version}}
    match: \.
    replace: '_'
    to: mangled-package-version
  # We need the extract the major version, because the branch / working
  # directory is mozilla-esr${major-version}. For example `mozilla-esr115`.
  - from: ${{package.version}}
    match: (\d+)\.(\d+)(?:\.\d+)?
    replace: '$1'
    to: major-version

pipeline:
  - runs: |
      # Craft the name of the final distfile.
      distfile="obj-${{cross.triplet.gnu.glibc}}/dist/firefox-${{package.version}}.en-US.linux-${{build.arch}}.tar.bz2"

      RELEASE_TAG=FIREFOX_${{vars.mangled-package-version}}esr_RELEASE
      echo "RELEASE_TAG=${RELEASE_TAG}"

      # Set the branch / directory that we use to correct one.
      BRANCH=mozilla-esr${{vars.major-version}}
      echo "BRANCH=${BRANCH}"

      # wasi stuff is version dependent, we're using 18, so copy it over
      # there.
      mkdir -p /usr/lib/clang/${{vars.llvm-vers}}/lib/wasi/
      cp /usr/lib/clang/lib/wasi/libclang_rt.builtins-wasm32.a /usr/lib/clang/${{vars.llvm-vers}}/lib/wasi/

      # The instructions (and what we used before), used bootstrap script,
      # but the script does not work with wolfi, and does not really work
      # with release repositories, so just extract what it does and do it
      # manually.
      # https://firefox-source-docs.mozilla.org/setup/linux_build.html
      # Clone the repository. If the major version is changed, this needs to
      # be updated.
      echo "RUNNING: hg clone https://hg.mozilla.org/releases/${BRANCH}/ -u ${RELEASE_TAG}"
      hg clone https://hg.mozilla.org/releases/${BRANCH}/ -u ${RELEASE_TAG}
      cd ${BRANCH}

      # Answer y to all prompts, and use the application
      # as browser to reduce any imcompatibilities with the build system. One
      # might be able to switch this to 'browser_artifact_mode' that uses
      # prebuilt artifacts.
      # This fails because it does not love wolfi like we do, but keep on
      # going.
      set +x
      ! ./mach --no-interactive bootstrap --application-choice browser
      set -e

      # Explicitly point to wasi-sysroot, so it picks up the wasi stuff.
      # For some reason it does not pick it up by default? :shrug:
      ./mach configure --with-wasi-sysroot=/usr/share/wasi-sysroot

      # Well, alllrighty then, let's build...
      ./mach build

      # Assuming all goes well, package it up. I'm not sure if we need one, or
      # both of these.
      ./mach package
      ./mach release

      # Add some symlinks as other distros seem to do.
      mkdir -p ${{targets.destdir}}/usr/lib
      mkdir -p ${{targets.destdir}}/usr/bin
      tar -jxvf ${distfile} -C ${{targets.destdir}}/usr/lib
      ln -s /usr/lib/firefox/firefox ${{targets.destdir}}/usr/bin/firefox
      ln -s /usr/bin/firefox ${{targets.destdir}}/usr/bin/firefox-esr-bin
      ln -s /usr/bin/firefox ${{targets.destdir}}/usr/bin/firefox-esr
      ln -s /usr/bin/firefox ${{targets.destdir}}/usr/bin/firefox-bin

update:
  enabled: true
  release-monitor:
    identifier: 16838

test:
  pipeline:
    - runs: |
        /usr/bin/firefox-bin --version
        /usr/bin/firefox-bin --version | grep esr
        /usr/bin/firefox-esr-bin --version | grep esr
        /usr/bin/firefox-esr --version | grep esr
        /usr/bin/firefox --version | grep esr
        # Just takes a screenshot of google.com.
        /usr/bin/firefox-esr-bin -screenshot https://www.google.com
        firefox --version
        firefox --help
        firefox-bin --version
        firefox-bin --help
        firefox-esr --version
        firefox-esr --help
        firefox-esr-bin --version
        firefox-esr-bin --help
